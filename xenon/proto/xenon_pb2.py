# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: xenon/proto/xenon.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='xenon/proto/xenon.proto',
  package='xenon',
  syntax='proto3',
  serialized_pb=_b('\n\x17xenon/proto/xenon.proto\x12\x05xenon\"\x07\n\x05\x45mpty\"v\n\nProperties\x12\x35\n\nproperties\x18\x01 \x03(\x0b\x32!.xenon.Properties.PropertiesEntry\x1a\x31\n\x0fPropertiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd8\x01\n\x13PropertyDescription\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x65\x66\x61ultValue\x18\x03 \x01(\t\x12-\n\x04type\x18\x04 \x01(\x0e\x32\x1f.xenon.PropertyDescription.Type\"Y\n\x04Type\x12\n\n\x06STRING\x10\x00\x12\x0b\n\x07\x42OOLEAN\x10\x01\x12\x0b\n\x07INTEGER\x10\x02\x12\n\n\x06\x44OUBLE\x10\x03\x12\x08\n\x04LONG\x10\x04\x12\x08\n\x04SIZE\x10\x05\x12\x0b\n\x07NATURAL\x10\x06\"F\n\x14PropertyDescriptions\x12.\n\nproperties\x18\x01 \x03(\x0b\x32\x1a.xenon.PropertyDescription\"\xdd\x01\n\x1bSchedulerAdaptorDescription\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x1a\n\x12supportedLocations\x18\x03 \x03(\t\x12\x37\n\x13supportedProperties\x18\x04 \x03(\x0b\x32\x1a.xenon.PropertyDescription\x12\x12\n\nisEmbedded\x18\x05 \x01(\x08\x12\x1b\n\x13supportsInteractive\x18\x06 \x01(\x08\x12\x15\n\rsupportsBatch\x18\x07 \x01(\x08\"X\n\x1cSchedulerAdaptorDescriptions\x12\x38\n\x0c\x64\x65scriptions\x18\x01 \x03(\x0b\x32\".xenon.SchedulerAdaptorDescription\"\x8e\x02\n\x1c\x46ileSystemAdaptorDescription\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x1a\n\x12supportedLocations\x18\x03 \x03(\t\x12\x37\n\x13supportedProperties\x18\x04 \x03(\x0b\x32\x1a.xenon.PropertyDescription\x12\x1e\n\x16supportsThirdPartyCopy\x18\x05 \x01(\x08\x12\x1e\n\x16\x63\x61nCreateSymboliclinks\x18\x06 \x01(\x08\x12\x1c\n\x14\x63\x61nReadSymboliclinks\x18\x07 \x01(\x08\x12\x18\n\x10isConnectionLess\x18\x08 \x01(\x08\"Z\n\x1d\x46ileSystemAdaptorDescriptions\x12\x39\n\x0c\x64\x65scriptions\x18\x01 \x03(\x0b\x32#.xenon.FileSystemAdaptorDescription\"\x1b\n\x0b\x41\x64\x61ptorName\x12\x0c\n\x04name\x18\x01 \x01(\t\"O\n\x15\x43\x65rtificateCredential\x12\x10\n\x08\x63\x65rtfile\x18\x01 \x01(\t\x12\x12\n\npassphrase\x18\x02 \x01(\t\x12\x10\n\x08username\x18\x03 \x01(\t\"8\n\x12PasswordCredential\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"%\n\x11\x44\x65\x66\x61ultCredential\x12\x10\n\x08username\x18\x01 \x01(\t\"\xde\x02\n\x17\x43reateFileSystemRequest\x12\x0f\n\x07\x61\x64\x61ptor\x18\x01 \x01(\t\x12\x10\n\x08location\x18\x02 \x01(\t\x12\x42\n\nproperties\x18\x03 \x03(\x0b\x32..xenon.CreateFileSystemRequest.PropertiesEntry\x12\x37\n\x0f\x63\x65rtificateCred\x18\x04 \x01(\x0b\x32\x1c.xenon.CertificateCredentialH\x00\x12\x31\n\x0cpasswordCred\x18\x05 \x01(\x0b\x32\x19.xenon.PasswordCredentialH\x00\x12/\n\x0b\x64\x65\x66\x61ultCred\x18\x06 \x01(\x0b\x32\x18.xenon.DefaultCredentialH\x00\x1a\x31\n\x0fPropertiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x0c\n\ncredential\"\x18\n\nFileSystem\x12\n\n\x02id\x18\x01 \x01(\t\"5\n\x0b\x46ileSystems\x12&\n\x0b\x66ilesystems\x18\x01 \x03(\x0b\x32\x11.xenon.FileSystem\";\n\x04Path\x12%\n\nfilesystem\x18\x01 \x01(\x0b\x32\x11.xenon.FileSystem\x12\x0c\n\x04path\x18\x02 \x01(\t\"=\n\rDeleteRequest\x12\x19\n\x04path\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12\x11\n\trecursive\x18\x02 \x01(\x08\"y\n\x0b\x43opyRequest\x12\x1b\n\x06source\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12\x1b\n\x06target\x18\x02 \x01(\x0b\x32\x0b.xenon.Path\x12\x1d\n\x04mode\x18\x03 \x01(\x0e\x32\x0f.xenon.CopyMode\x12\x11\n\trecursive\x18\x04 \x01(\x08\"V\n\rRenameRequest\x12%\n\nfilesystem\x18\x01 \x01(\x0b\x32\x11.xenon.FileSystem\x12\x0e\n\x06source\x18\x02 \x01(\t\x12\x0e\n\x06target\x18\x03 \x01(\t\"`\n\x19\x43reateSymbolicLinkRequest\x12%\n\nfilesystem\x18\x01 \x01(\x0b\x32\x11.xenon.FileSystem\x12\x0c\n\x04link\x18\x02 \x01(\t\x12\x0e\n\x06target\x18\x03 \x01(\t\"B\n\rCopyOperation\x12\n\n\x02id\x18\x01 \x01(\t\x12%\n\nfilesystem\x18\x02 \x01(\x0b\x32\x11.xenon.FileSystem\"^\n\x18\x43opyOperationWithTimeout\x12\n\n\x02id\x18\x01 \x01(\t\x12%\n\nfilesystem\x18\x02 \x01(\x0b\x32\x11.xenon.FileSystem\x12\x0f\n\x07timeout\x18\x03 \x01(\x04\"\xa0\x01\n\nCopyStatus\x12+\n\rcopyOperation\x18\x01 \x01(\x0b\x32\x14.xenon.CopyOperation\x12\x13\n\x0b\x62ytesCopied\x18\x02 \x01(\x04\x12\x13\n\x0b\x62ytesToCopy\x18\x03 \x01(\x04\x12\x0c\n\x04\x64one\x18\x04 \x01(\x08\x12\x0f\n\x07running\x18\x05 \x01(\x08\x12\r\n\x05state\x18\x06 \x01(\t\x12\r\n\x05\x65rror\x18\x07 \x01(\t\"\xf5\x02\n\x0ePathAttributes\x12\x19\n\x04path\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12\x14\n\x0c\x63reationTime\x18\x02 \x01(\x04\x12\r\n\x05group\x18\x03 \x01(\t\x12\x13\n\x0bisDirectory\x18\x04 \x01(\x08\x12\x14\n\x0cisExecutable\x18\x05 \x01(\x08\x12\x10\n\x08isHidden\x18\x06 \x01(\x08\x12\x0f\n\x07isOther\x18\x07 \x01(\x08\x12\x12\n\nisReadable\x18\x08 \x01(\x08\x12\x15\n\risRegularFile\x18\t \x01(\x08\x12\x16\n\x0eisSymbolicLink\x18\n \x01(\x08\x12\x12\n\nisWritable\x18\x0b \x01(\x08\x12\x16\n\x0elastAccessTime\x18\x0c \x01(\x04\x12\x18\n\x10lastModifiedTime\x18\r \x01(\x04\x12\r\n\x05owner\x18\x0e \x01(\t\x12/\n\x0bpermissions\x18\x0f \x03(\x0e\x32\x1a.xenon.PosixFilePermission\x12\x0c\n\x04size\x18\x10 \x01(\x04\"l\n\x1eSetPosixFilePermissionsRequest\x12\x19\n\x04path\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12/\n\x0bpermissions\x18\x02 \x03(\x0e\x32\x1a.xenon.PosixFilePermission\"&\n\x14ReadFromFileResponse\x12\x0e\n\x06\x62uffer\x18\x01 \x01(\x0c\"M\n\x12WriteToFileRequest\x12\x19\n\x04path\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12\x0e\n\x06\x62uffer\x18\x02 \x01(\x0c\x12\x0c\n\x04size\x18\x03 \x01(\x04\"@\n\x13\x41ppendToFileRequest\x12\x19\n\x04path\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12\x0e\n\x06\x62uffer\x18\x02 \x01(\x0c\":\n\x0bListRequest\x12\x18\n\x03\x64ir\x18\x01 \x01(\x0b\x32\x0b.xenon.Path\x12\x11\n\trecursive\x18\x02 \x01(\x08\"\xdc\x02\n\x16\x43reateSchedulerRequest\x12\x0f\n\x07\x61\x64\x61ptor\x18\x01 \x01(\t\x12\x10\n\x08location\x18\x02 \x01(\t\x12\x41\n\nproperties\x18\x03 \x03(\x0b\x32-.xenon.CreateSchedulerRequest.PropertiesEntry\x12\x37\n\x0f\x63\x65rtificateCred\x18\x04 \x01(\x0b\x32\x1c.xenon.CertificateCredentialH\x00\x12\x31\n\x0cpasswordCred\x18\x05 \x01(\x0b\x32\x19.xenon.PasswordCredentialH\x00\x12/\n\x0b\x64\x65\x66\x61ultCred\x18\x06 \x01(\x0b\x32\x18.xenon.DefaultCredentialH\x00\x1a\x31\n\x0fPropertiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x0c\n\ncredential\"\x17\n\tScheduler\x12\n\n\x02id\x18\x01 \x01(\t\"2\n\nSchedulers\x12$\n\nschedulers\x18\x01 \x03(\x0b\x32\x10.xenon.Scheduler\"\xc3\x03\n\x0eJobDescription\x12\x12\n\nexecutable\x18\x01 \x01(\t\x12\x11\n\targuments\x18\x02 \x03(\t\x12\x18\n\x10workingDirectory\x18\x03 \x01(\t\x12;\n\x0b\x65nvironment\x18\x04 \x03(\x0b\x32&.xenon.JobDescription.EnvironmentEntry\x12\x11\n\tqueueName\x18\x05 \x01(\t\x12\x0f\n\x07maxTime\x18\x06 \x01(\r\x12\x11\n\tnodeCount\x18\x07 \x01(\r\x12\x18\n\x10processesPerNode\x18\x08 \x01(\r\x12\x1a\n\x12startSingleProcess\x18\t \x01(\x08\x12\x0e\n\x06stderr\x18\n \x01(\t\x12\r\n\x05stdin\x18\x0b \x01(\t\x12\x0e\n\x06stdout\x18\x0c \x01(\t\x12\x33\n\x07options\x18\r \x03(\x0b\x32\".xenon.JobDescription.OptionsEntry\x1a\x32\n\x10\x45nvironmentEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"h\n\x15SubmitBatchJobRequest\x12#\n\tscheduler\x18\x01 \x01(\x0b\x32\x10.xenon.Scheduler\x12*\n\x0b\x64\x65scription\x18\x02 \x01(\x0b\x32\x15.xenon.JobDescription\"}\n\x1bSubmitInteractiveJobRequest\x12#\n\tscheduler\x18\x01 \x01(\x0b\x32\x10.xenon.Scheduler\x12*\n\x0b\x64\x65scription\x18\x02 \x01(\x0b\x32\x15.xenon.JobDescription\x12\r\n\x05stdin\x18\x03 \x01(\x0c\"6\n\x03Job\x12\n\n\x02id\x18\x01 \x01(\t\x12#\n\tscheduler\x18\x02 \x01(\x0b\x32\x10.xenon.Scheduler\" \n\x04Jobs\x12\x18\n\x04jobs\x18\x01 \x03(\x0b\x32\n.xenon.Job\"R\n\x0eJobWithTimeout\x12\n\n\x02id\x18\x01 \x01(\t\x12#\n\tscheduler\x18\x02 \x01(\x0b\x32\x10.xenon.Scheduler\x12\x0f\n\x07timeout\x18\x03 \x01(\x04\"\x15\n\x05Queue\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x16\n\x06Queues\x12\x0c\n\x04name\x18\x01 \x03(\t\"I\n\x12SchedulerAndQueues\x12#\n\tscheduler\x18\x01 \x01(\x0b\x32\x10.xenon.Scheduler\x12\x0e\n\x06queues\x18\x02 \x03(\t\"G\n\x11SchedulerAndQueue\x12#\n\tscheduler\x18\x01 \x01(\x0b\x32\x10.xenon.Scheduler\x12\r\n\x05queue\x18\x02 \x01(\t\"\x9c\x03\n\tJobStatus\x12\r\n\x05state\x18\x01 \x01(\t\x12\x0f\n\x07running\x18\x02 \x01(\x08\x12\x0c\n\x04\x64one\x18\x03 \x01(\x08\x12X\n\x1cschedulerSpecificInformation\x18\x04 \x03(\x0b\x32\x32.xenon.JobStatus.SchedulerSpecificInformationEntry\x12\x10\n\x08\x65xitCode\x18\x06 \x01(\x05\x12\x14\n\x0c\x65rrorMessage\x18\x07 \x01(\t\x12-\n\terrorType\x18\x08 \x01(\x0e\x32\x1a.xenon.JobStatus.ErrorType\x12\x17\n\x03job\x18\t \x01(\x0b\x32\n.xenon.Job\x1a\x43\n!SchedulerSpecificInformationEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"R\n\tErrorType\x12\t\n\x05\x45MPTY\x10\x00\x12\r\n\tNOT_FOUND\x10\x01\x12\r\n\tCANCELLED\x10\x02\x12\t\n\x05XENON\x10\x03\x12\x06\n\x02IO\x10\x04\x12\t\n\x05OTHER\x10\x05\"1\n\x0bJobStatuses\x12\"\n\x08statuses\x18\x01 \x03(\x0b\x32\x10.xenon.JobStatus\"\xf0\x01\n\x0bQueueStatus\x12\x0c\n\x04name\x18\x01 \x01(\t\x12#\n\tscheduler\x18\x02 \x01(\x0b\x32\x10.xenon.Scheduler\x12Z\n\x1cschedulerSpecificInformation\x18\x03 \x03(\x0b\x32\x34.xenon.QueueStatus.SchedulerSpecificInformationEntry\x12\r\n\x05\x65rror\x18\x04 \x01(\t\x1a\x43\n!SchedulerSpecificInformationEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"5\n\rQueueStatuses\x12$\n\x08statuses\x18\x01 \x03(\x0b\x32\x12.xenon.QueueStatus\"W\n\x1cSubmitInteractiveJobResponse\x12\x0e\n\x06stdout\x18\x01 \x01(\x0c\x12\x0e\n\x06stderr\x18\x02 \x01(\x0c\x12\x17\n\x03job\x18\x03 \x01(\x0b\x32\n.xenon.Job\"\x13\n\x02Is\x12\r\n\x05value\x18\x01 \x01(\x08*/\n\x08\x43opyMode\x12\n\n\x06\x43REATE\x10\x00\x12\x0b\n\x07REPLACE\x10\x01\x12\n\n\x06IGNORE\x10\x02*\xbe\x01\n\x13PosixFilePermission\x12\x08\n\x04NONE\x10\x00\x12\x0e\n\nOWNER_READ\x10\x01\x12\x0f\n\x0bOWNER_WRITE\x10\x02\x12\x11\n\rOWNER_EXECUTE\x10\x03\x12\x0e\n\nGROUP_READ\x10\x04\x12\x0f\n\x0bGROUP_WRITE\x10\x05\x12\x11\n\rGROUP_EXECUTE\x10\x06\x12\x0f\n\x0bOTHERS_READ\x10\x07\x12\x10\n\x0cOTHERS_WRITE\x10\x08\x12\x12\n\x0eOTHERS_EXECUTE\x10\t2\x90\x0c\n\x10XenonFileSystems\x12N\n\x16getAdaptorDescriptions\x12\x0c.xenon.Empty\x1a$.xenon.FileSystemAdaptorDescriptions\"\x00\x12R\n\x15getAdaptorDescription\x12\x12.xenon.AdaptorName\x1a#.xenon.FileSystemAdaptorDescription\"\x00\x12=\n\x06\x63reate\x12\x1e.xenon.CreateFileSystemRequest\x1a\x11.xenon.FileSystem\"\x00\x12\x30\n\x11\x63reateDirectories\x12\x0b.xenon.Path\x1a\x0c.xenon.Empty\"\x00\x12.\n\x0f\x63reateDirectory\x12\x0b.xenon.Path\x1a\x0c.xenon.Empty\"\x00\x12)\n\ncreateFile\x12\x0b.xenon.Path\x1a\x0c.xenon.Empty\"\x00\x12\x46\n\x12\x63reateSymbolicLink\x12 .xenon.CreateSymbolicLinkRequest\x1a\x0c.xenon.Empty\"\x00\x12\x32\n\x04\x63opy\x12\x12.xenon.CopyRequest\x1a\x14.xenon.CopyOperation\"\x00\x12\x33\n\x06\x63\x61ncel\x12\x14.xenon.CopyOperation\x1a\x11.xenon.CopyStatus\"\x00\x12\x36\n\tgetStatus\x12\x14.xenon.CopyOperation\x1a\x11.xenon.CopyStatus\"\x00\x12.\n\x06rename\x12\x14.xenon.RenameRequest\x1a\x0c.xenon.Empty\"\x00\x12.\n\x06\x64\x65lete\x12\x14.xenon.DeleteRequest\x1a\x0c.xenon.Empty\"\x00\x12\"\n\x06\x65xists\x12\x0b.xenon.Path\x1a\t.xenon.Is\"\x00\x12<\n\x0creadFromFile\x12\x0b.xenon.Path\x1a\x1b.xenon.ReadFromFileResponse\"\x00\x30\x01\x12:\n\x0bwriteToFile\x12\x19.xenon.WriteToFileRequest\x1a\x0c.xenon.Empty\"\x00(\x01\x12<\n\x0c\x61ppendToFile\x12\x1a.xenon.AppendToFileRequest\x1a\x0c.xenon.Empty\"\x00(\x01\x12\x35\n\x04list\x12\x12.xenon.ListRequest\x1a\x15.xenon.PathAttributes\"\x00\x30\x01\x12\x35\n\rgetAttributes\x12\x0b.xenon.Path\x1a\x15.xenon.PathAttributes\"\x00\x12\x37\n\x13getWorkingDirectory\x12\x11.xenon.FileSystem\x1a\x0b.xenon.Path\"\x00\x12\x32\n\x13setWorkingDirectory\x12\x0b.xenon.Path\x1a\x0c.xenon.Empty\"\x00\x12P\n\x17setPosixFilePermissions\x12%.xenon.SetPosixFilePermissionsRequest\x1a\x0c.xenon.Empty\"\x00\x12.\n\x10readSymbolicLink\x12\x0b.xenon.Path\x1a\x0b.xenon.Path\"\x00\x12(\n\x06isOpen\x12\x11.xenon.FileSystem\x1a\t.xenon.Is\"\x00\x12*\n\x05\x63lose\x12\x11.xenon.FileSystem\x1a\x0c.xenon.Empty\"\x00\x12\x45\n\rwaitUntilDone\x12\x1f.xenon.CopyOperationWithTimeout\x1a\x11.xenon.CopyStatus\"\x00\x12\x36\n\x10localFileSystems\x12\x0c.xenon.Empty\x1a\x12.xenon.FileSystems\"\x00\x12\x35\n\x0flistFileSystems\x12\x0c.xenon.Empty\x1a\x12.xenon.FileSystems\"\x00\x32\x86\t\n\x0fXenonSchedulers\x12M\n\x16getAdaptorDescriptions\x12\x0c.xenon.Empty\x1a#.xenon.SchedulerAdaptorDescriptions\"\x00\x12Q\n\x15getAdaptorDescription\x12\x12.xenon.AdaptorName\x1a\".xenon.SchedulerAdaptorDescription\"\x00\x12;\n\x06\x63reate\x12\x1d.xenon.CreateSchedulerRequest\x1a\x10.xenon.Scheduler\"\x00\x12<\n\x0esubmitBatchJob\x12\x1c.xenon.SubmitBatchJobRequest\x1a\n.xenon.Job\"\x00\x12\x65\n\x14submitInteractiveJob\x12\".xenon.SubmitInteractiveJobRequest\x1a#.xenon.SubmitInteractiveJobResponse\"\x00(\x01\x30\x01\x12.\n\tgetQueues\x12\x10.xenon.Scheduler\x1a\r.xenon.Queues\"\x00\x12\x37\n\x13getDefaultQueueName\x12\x10.xenon.Scheduler\x1a\x0c.xenon.Queue\"\x00\x12\x33\n\x07getJobs\x12\x19.xenon.SchedulerAndQueues\x1a\x0b.xenon.Jobs\"\x00\x12.\n\x0cgetJobStatus\x12\n.xenon.Job\x1a\x10.xenon.JobStatus\"\x00\x12\x33\n\x0egetJobStatuses\x12\x0b.xenon.Jobs\x1a\x12.xenon.JobStatuses\"\x00\x12@\n\x0egetQueueStatus\x12\x18.xenon.SchedulerAndQueue\x1a\x12.xenon.QueueStatus\"\x00\x12\x45\n\x10getQueueStatuses\x12\x19.xenon.SchedulerAndQueues\x1a\x14.xenon.QueueStatuses\"\x00\x12:\n\rwaitUntilDone\x12\x15.xenon.JobWithTimeout\x1a\x10.xenon.JobStatus\"\x00\x12=\n\x10waitUntilRunning\x12\x15.xenon.JobWithTimeout\x1a\x10.xenon.JobStatus\"\x00\x12\'\n\x06isOpen\x12\x10.xenon.Scheduler\x1a\t.xenon.Is\"\x00\x12+\n\tcancelJob\x12\n.xenon.Job\x1a\x10.xenon.JobStatus\"\x00\x12)\n\x05\x63lose\x12\x10.xenon.Scheduler\x1a\x0c.xenon.Empty\"\x00\x12\x32\n\x0elocalScheduler\x12\x0c.xenon.Empty\x1a\x10.xenon.Scheduler\"\x00\x12\x33\n\x0elistSchedulers\x12\x0c.xenon.Empty\x1a\x11.xenon.Schedulers\"\x00\x42*\n\x1cnl.esciencecenter.xenon.grpcB\nXenonProtob\x06proto3')
)

_COPYMODE = _descriptor.EnumDescriptor(
  name='CopyMode',
  full_name='xenon.CopyMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CREATE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REPLACE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IGNORE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5623,
  serialized_end=5670,
)
_sym_db.RegisterEnumDescriptor(_COPYMODE)

CopyMode = enum_type_wrapper.EnumTypeWrapper(_COPYMODE)
_POSIXFILEPERMISSION = _descriptor.EnumDescriptor(
  name='PosixFilePermission',
  full_name='xenon.PosixFilePermission',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OWNER_READ', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OWNER_WRITE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OWNER_EXECUTE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GROUP_READ', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GROUP_WRITE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GROUP_EXECUTE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHERS_READ', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHERS_WRITE', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHERS_EXECUTE', index=9, number=9,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5673,
  serialized_end=5863,
)
_sym_db.RegisterEnumDescriptor(_POSIXFILEPERMISSION)

PosixFilePermission = enum_type_wrapper.EnumTypeWrapper(_POSIXFILEPERMISSION)
CREATE = 0
REPLACE = 1
IGNORE = 2
NONE = 0
OWNER_READ = 1
OWNER_WRITE = 2
OWNER_EXECUTE = 3
GROUP_READ = 4
GROUP_WRITE = 5
GROUP_EXECUTE = 6
OTHERS_READ = 7
OTHERS_WRITE = 8
OTHERS_EXECUTE = 9


_PROPERTYDESCRIPTION_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='xenon.PropertyDescription.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STRING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOLEAN', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOUBLE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LONG', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SIZE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NATURAL', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=291,
  serialized_end=380,
)
_sym_db.RegisterEnumDescriptor(_PROPERTYDESCRIPTION_TYPE)

_JOBSTATUS_ERRORTYPE = _descriptor.EnumDescriptor(
  name='ErrorType',
  full_name='xenon.JobStatus.ErrorType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_FOUND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='XENON', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IO', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHER', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5080,
  serialized_end=5162,
)
_sym_db.RegisterEnumDescriptor(_JOBSTATUS_ERRORTYPE)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='xenon.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=41,
)


_PROPERTIES_PROPERTIESENTRY = _descriptor.Descriptor(
  name='PropertiesEntry',
  full_name='xenon.Properties.PropertiesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.Properties.PropertiesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.Properties.PropertiesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=161,
)

_PROPERTIES = _descriptor.Descriptor(
  name='Properties',
  full_name='xenon.Properties',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='properties', full_name='xenon.Properties.properties', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_PROPERTIES_PROPERTIESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=161,
)


_PROPERTYDESCRIPTION = _descriptor.Descriptor(
  name='PropertyDescription',
  full_name='xenon.PropertyDescription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.PropertyDescription.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='xenon.PropertyDescription.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultValue', full_name='xenon.PropertyDescription.defaultValue', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='xenon.PropertyDescription.type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PROPERTYDESCRIPTION_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=164,
  serialized_end=380,
)


_PROPERTYDESCRIPTIONS = _descriptor.Descriptor(
  name='PropertyDescriptions',
  full_name='xenon.PropertyDescriptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='properties', full_name='xenon.PropertyDescriptions.properties', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=382,
  serialized_end=452,
)


_SCHEDULERADAPTORDESCRIPTION = _descriptor.Descriptor(
  name='SchedulerAdaptorDescription',
  full_name='xenon.SchedulerAdaptorDescription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.SchedulerAdaptorDescription.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='xenon.SchedulerAdaptorDescription.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportedLocations', full_name='xenon.SchedulerAdaptorDescription.supportedLocations', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportedProperties', full_name='xenon.SchedulerAdaptorDescription.supportedProperties', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isEmbedded', full_name='xenon.SchedulerAdaptorDescription.isEmbedded', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportsInteractive', full_name='xenon.SchedulerAdaptorDescription.supportsInteractive', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportsBatch', full_name='xenon.SchedulerAdaptorDescription.supportsBatch', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=455,
  serialized_end=676,
)


_SCHEDULERADAPTORDESCRIPTIONS = _descriptor.Descriptor(
  name='SchedulerAdaptorDescriptions',
  full_name='xenon.SchedulerAdaptorDescriptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='descriptions', full_name='xenon.SchedulerAdaptorDescriptions.descriptions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=678,
  serialized_end=766,
)


_FILESYSTEMADAPTORDESCRIPTION = _descriptor.Descriptor(
  name='FileSystemAdaptorDescription',
  full_name='xenon.FileSystemAdaptorDescription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.FileSystemAdaptorDescription.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='xenon.FileSystemAdaptorDescription.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportedLocations', full_name='xenon.FileSystemAdaptorDescription.supportedLocations', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportedProperties', full_name='xenon.FileSystemAdaptorDescription.supportedProperties', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='supportsThirdPartyCopy', full_name='xenon.FileSystemAdaptorDescription.supportsThirdPartyCopy', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='canCreateSymboliclinks', full_name='xenon.FileSystemAdaptorDescription.canCreateSymboliclinks', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='canReadSymboliclinks', full_name='xenon.FileSystemAdaptorDescription.canReadSymboliclinks', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isConnectionLess', full_name='xenon.FileSystemAdaptorDescription.isConnectionLess', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=769,
  serialized_end=1039,
)


_FILESYSTEMADAPTORDESCRIPTIONS = _descriptor.Descriptor(
  name='FileSystemAdaptorDescriptions',
  full_name='xenon.FileSystemAdaptorDescriptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='descriptions', full_name='xenon.FileSystemAdaptorDescriptions.descriptions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1041,
  serialized_end=1131,
)


_ADAPTORNAME = _descriptor.Descriptor(
  name='AdaptorName',
  full_name='xenon.AdaptorName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.AdaptorName.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1133,
  serialized_end=1160,
)


_CERTIFICATECREDENTIAL = _descriptor.Descriptor(
  name='CertificateCredential',
  full_name='xenon.CertificateCredential',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='certfile', full_name='xenon.CertificateCredential.certfile', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='passphrase', full_name='xenon.CertificateCredential.passphrase', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='xenon.CertificateCredential.username', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1162,
  serialized_end=1241,
)


_PASSWORDCREDENTIAL = _descriptor.Descriptor(
  name='PasswordCredential',
  full_name='xenon.PasswordCredential',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='xenon.PasswordCredential.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='xenon.PasswordCredential.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1243,
  serialized_end=1299,
)


_DEFAULTCREDENTIAL = _descriptor.Descriptor(
  name='DefaultCredential',
  full_name='xenon.DefaultCredential',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='xenon.DefaultCredential.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1301,
  serialized_end=1338,
)


_CREATEFILESYSTEMREQUEST_PROPERTIESENTRY = _descriptor.Descriptor(
  name='PropertiesEntry',
  full_name='xenon.CreateFileSystemRequest.PropertiesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.CreateFileSystemRequest.PropertiesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.CreateFileSystemRequest.PropertiesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=161,
)

_CREATEFILESYSTEMREQUEST = _descriptor.Descriptor(
  name='CreateFileSystemRequest',
  full_name='xenon.CreateFileSystemRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='adaptor', full_name='xenon.CreateFileSystemRequest.adaptor', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='xenon.CreateFileSystemRequest.location', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='properties', full_name='xenon.CreateFileSystemRequest.properties', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='certificateCred', full_name='xenon.CreateFileSystemRequest.certificateCred', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='passwordCred', full_name='xenon.CreateFileSystemRequest.passwordCred', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultCred', full_name='xenon.CreateFileSystemRequest.defaultCred', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CREATEFILESYSTEMREQUEST_PROPERTIESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='credential', full_name='xenon.CreateFileSystemRequest.credential',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1341,
  serialized_end=1691,
)


_FILESYSTEM = _descriptor.Descriptor(
  name='FileSystem',
  full_name='xenon.FileSystem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='xenon.FileSystem.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1693,
  serialized_end=1717,
)


_FILESYSTEMS = _descriptor.Descriptor(
  name='FileSystems',
  full_name='xenon.FileSystems',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filesystems', full_name='xenon.FileSystems.filesystems', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1719,
  serialized_end=1772,
)


_PATH = _descriptor.Descriptor(
  name='Path',
  full_name='xenon.Path',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filesystem', full_name='xenon.Path.filesystem', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='xenon.Path.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1774,
  serialized_end=1833,
)


_DELETEREQUEST = _descriptor.Descriptor(
  name='DeleteRequest',
  full_name='xenon.DeleteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='xenon.DeleteRequest.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recursive', full_name='xenon.DeleteRequest.recursive', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1835,
  serialized_end=1896,
)


_COPYREQUEST = _descriptor.Descriptor(
  name='CopyRequest',
  full_name='xenon.CopyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source', full_name='xenon.CopyRequest.source', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='xenon.CopyRequest.target', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mode', full_name='xenon.CopyRequest.mode', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recursive', full_name='xenon.CopyRequest.recursive', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1898,
  serialized_end=2019,
)


_RENAMEREQUEST = _descriptor.Descriptor(
  name='RenameRequest',
  full_name='xenon.RenameRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filesystem', full_name='xenon.RenameRequest.filesystem', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='source', full_name='xenon.RenameRequest.source', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='xenon.RenameRequest.target', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2021,
  serialized_end=2107,
)


_CREATESYMBOLICLINKREQUEST = _descriptor.Descriptor(
  name='CreateSymbolicLinkRequest',
  full_name='xenon.CreateSymbolicLinkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filesystem', full_name='xenon.CreateSymbolicLinkRequest.filesystem', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='link', full_name='xenon.CreateSymbolicLinkRequest.link', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='xenon.CreateSymbolicLinkRequest.target', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2109,
  serialized_end=2205,
)


_COPYOPERATION = _descriptor.Descriptor(
  name='CopyOperation',
  full_name='xenon.CopyOperation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='xenon.CopyOperation.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filesystem', full_name='xenon.CopyOperation.filesystem', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2207,
  serialized_end=2273,
)


_COPYOPERATIONWITHTIMEOUT = _descriptor.Descriptor(
  name='CopyOperationWithTimeout',
  full_name='xenon.CopyOperationWithTimeout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='xenon.CopyOperationWithTimeout.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filesystem', full_name='xenon.CopyOperationWithTimeout.filesystem', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='xenon.CopyOperationWithTimeout.timeout', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2275,
  serialized_end=2369,
)


_COPYSTATUS = _descriptor.Descriptor(
  name='CopyStatus',
  full_name='xenon.CopyStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='copyOperation', full_name='xenon.CopyStatus.copyOperation', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bytesCopied', full_name='xenon.CopyStatus.bytesCopied', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bytesToCopy', full_name='xenon.CopyStatus.bytesToCopy', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='done', full_name='xenon.CopyStatus.done', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='running', full_name='xenon.CopyStatus.running', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='xenon.CopyStatus.state', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='xenon.CopyStatus.error', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2372,
  serialized_end=2532,
)


_PATHATTRIBUTES = _descriptor.Descriptor(
  name='PathAttributes',
  full_name='xenon.PathAttributes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='xenon.PathAttributes.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='creationTime', full_name='xenon.PathAttributes.creationTime', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group', full_name='xenon.PathAttributes.group', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isDirectory', full_name='xenon.PathAttributes.isDirectory', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isExecutable', full_name='xenon.PathAttributes.isExecutable', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isHidden', full_name='xenon.PathAttributes.isHidden', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isOther', full_name='xenon.PathAttributes.isOther', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isReadable', full_name='xenon.PathAttributes.isReadable', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isRegularFile', full_name='xenon.PathAttributes.isRegularFile', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isSymbolicLink', full_name='xenon.PathAttributes.isSymbolicLink', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isWritable', full_name='xenon.PathAttributes.isWritable', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastAccessTime', full_name='xenon.PathAttributes.lastAccessTime', index=11,
      number=12, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastModifiedTime', full_name='xenon.PathAttributes.lastModifiedTime', index=12,
      number=13, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='owner', full_name='xenon.PathAttributes.owner', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='permissions', full_name='xenon.PathAttributes.permissions', index=14,
      number=15, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='xenon.PathAttributes.size', index=15,
      number=16, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2535,
  serialized_end=2908,
)


_SETPOSIXFILEPERMISSIONSREQUEST = _descriptor.Descriptor(
  name='SetPosixFilePermissionsRequest',
  full_name='xenon.SetPosixFilePermissionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='xenon.SetPosixFilePermissionsRequest.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='permissions', full_name='xenon.SetPosixFilePermissionsRequest.permissions', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2910,
  serialized_end=3018,
)


_READFROMFILERESPONSE = _descriptor.Descriptor(
  name='ReadFromFileResponse',
  full_name='xenon.ReadFromFileResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buffer', full_name='xenon.ReadFromFileResponse.buffer', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3020,
  serialized_end=3058,
)


_WRITETOFILEREQUEST = _descriptor.Descriptor(
  name='WriteToFileRequest',
  full_name='xenon.WriteToFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='xenon.WriteToFileRequest.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='buffer', full_name='xenon.WriteToFileRequest.buffer', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='xenon.WriteToFileRequest.size', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3060,
  serialized_end=3137,
)


_APPENDTOFILEREQUEST = _descriptor.Descriptor(
  name='AppendToFileRequest',
  full_name='xenon.AppendToFileRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='xenon.AppendToFileRequest.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='buffer', full_name='xenon.AppendToFileRequest.buffer', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3139,
  serialized_end=3203,
)


_LISTREQUEST = _descriptor.Descriptor(
  name='ListRequest',
  full_name='xenon.ListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dir', full_name='xenon.ListRequest.dir', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recursive', full_name='xenon.ListRequest.recursive', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3205,
  serialized_end=3263,
)


_CREATESCHEDULERREQUEST_PROPERTIESENTRY = _descriptor.Descriptor(
  name='PropertiesEntry',
  full_name='xenon.CreateSchedulerRequest.PropertiesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.CreateSchedulerRequest.PropertiesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.CreateSchedulerRequest.PropertiesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=161,
)

_CREATESCHEDULERREQUEST = _descriptor.Descriptor(
  name='CreateSchedulerRequest',
  full_name='xenon.CreateSchedulerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='adaptor', full_name='xenon.CreateSchedulerRequest.adaptor', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='xenon.CreateSchedulerRequest.location', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='properties', full_name='xenon.CreateSchedulerRequest.properties', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='certificateCred', full_name='xenon.CreateSchedulerRequest.certificateCred', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='passwordCred', full_name='xenon.CreateSchedulerRequest.passwordCred', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultCred', full_name='xenon.CreateSchedulerRequest.defaultCred', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CREATESCHEDULERREQUEST_PROPERTIESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='credential', full_name='xenon.CreateSchedulerRequest.credential',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3266,
  serialized_end=3614,
)


_SCHEDULER = _descriptor.Descriptor(
  name='Scheduler',
  full_name='xenon.Scheduler',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='xenon.Scheduler.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3616,
  serialized_end=3639,
)


_SCHEDULERS = _descriptor.Descriptor(
  name='Schedulers',
  full_name='xenon.Schedulers',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='schedulers', full_name='xenon.Schedulers.schedulers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3641,
  serialized_end=3691,
)


_JOBDESCRIPTION_ENVIRONMENTENTRY = _descriptor.Descriptor(
  name='EnvironmentEntry',
  full_name='xenon.JobDescription.EnvironmentEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.JobDescription.EnvironmentEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.JobDescription.EnvironmentEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4047,
  serialized_end=4097,
)

_JOBDESCRIPTION_OPTIONSENTRY = _descriptor.Descriptor(
  name='OptionsEntry',
  full_name='xenon.JobDescription.OptionsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.JobDescription.OptionsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.JobDescription.OptionsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4099,
  serialized_end=4145,
)

_JOBDESCRIPTION = _descriptor.Descriptor(
  name='JobDescription',
  full_name='xenon.JobDescription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='executable', full_name='xenon.JobDescription.executable', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arguments', full_name='xenon.JobDescription.arguments', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='workingDirectory', full_name='xenon.JobDescription.workingDirectory', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='environment', full_name='xenon.JobDescription.environment', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queueName', full_name='xenon.JobDescription.queueName', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maxTime', full_name='xenon.JobDescription.maxTime', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nodeCount', full_name='xenon.JobDescription.nodeCount', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='processesPerNode', full_name='xenon.JobDescription.processesPerNode', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='startSingleProcess', full_name='xenon.JobDescription.startSingleProcess', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stderr', full_name='xenon.JobDescription.stderr', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdin', full_name='xenon.JobDescription.stdin', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdout', full_name='xenon.JobDescription.stdout', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='options', full_name='xenon.JobDescription.options', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_JOBDESCRIPTION_ENVIRONMENTENTRY, _JOBDESCRIPTION_OPTIONSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3694,
  serialized_end=4145,
)


_SUBMITBATCHJOBREQUEST = _descriptor.Descriptor(
  name='SubmitBatchJobRequest',
  full_name='xenon.SubmitBatchJobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.SubmitBatchJobRequest.scheduler', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='xenon.SubmitBatchJobRequest.description', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4147,
  serialized_end=4251,
)


_SUBMITINTERACTIVEJOBREQUEST = _descriptor.Descriptor(
  name='SubmitInteractiveJobRequest',
  full_name='xenon.SubmitInteractiveJobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.SubmitInteractiveJobRequest.scheduler', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='xenon.SubmitInteractiveJobRequest.description', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdin', full_name='xenon.SubmitInteractiveJobRequest.stdin', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4253,
  serialized_end=4378,
)


_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='xenon.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='xenon.Job.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.Job.scheduler', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4380,
  serialized_end=4434,
)


_JOBS = _descriptor.Descriptor(
  name='Jobs',
  full_name='xenon.Jobs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='jobs', full_name='xenon.Jobs.jobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4436,
  serialized_end=4468,
)


_JOBWITHTIMEOUT = _descriptor.Descriptor(
  name='JobWithTimeout',
  full_name='xenon.JobWithTimeout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='xenon.JobWithTimeout.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.JobWithTimeout.scheduler', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='xenon.JobWithTimeout.timeout', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4470,
  serialized_end=4552,
)


_QUEUE = _descriptor.Descriptor(
  name='Queue',
  full_name='xenon.Queue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.Queue.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4554,
  serialized_end=4575,
)


_QUEUES = _descriptor.Descriptor(
  name='Queues',
  full_name='xenon.Queues',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.Queues.name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4577,
  serialized_end=4599,
)


_SCHEDULERANDQUEUES = _descriptor.Descriptor(
  name='SchedulerAndQueues',
  full_name='xenon.SchedulerAndQueues',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.SchedulerAndQueues.scheduler', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queues', full_name='xenon.SchedulerAndQueues.queues', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4601,
  serialized_end=4674,
)


_SCHEDULERANDQUEUE = _descriptor.Descriptor(
  name='SchedulerAndQueue',
  full_name='xenon.SchedulerAndQueue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.SchedulerAndQueue.scheduler', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='queue', full_name='xenon.SchedulerAndQueue.queue', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4676,
  serialized_end=4747,
)


_JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY = _descriptor.Descriptor(
  name='SchedulerSpecificInformationEntry',
  full_name='xenon.JobStatus.SchedulerSpecificInformationEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.JobStatus.SchedulerSpecificInformationEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.JobStatus.SchedulerSpecificInformationEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5011,
  serialized_end=5078,
)

_JOBSTATUS = _descriptor.Descriptor(
  name='JobStatus',
  full_name='xenon.JobStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='xenon.JobStatus.state', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='running', full_name='xenon.JobStatus.running', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='done', full_name='xenon.JobStatus.done', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedulerSpecificInformation', full_name='xenon.JobStatus.schedulerSpecificInformation', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exitCode', full_name='xenon.JobStatus.exitCode', index=4,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorMessage', full_name='xenon.JobStatus.errorMessage', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorType', full_name='xenon.JobStatus.errorType', index=6,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='job', full_name='xenon.JobStatus.job', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY, ],
  enum_types=[
    _JOBSTATUS_ERRORTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4750,
  serialized_end=5162,
)


_JOBSTATUSES = _descriptor.Descriptor(
  name='JobStatuses',
  full_name='xenon.JobStatuses',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='statuses', full_name='xenon.JobStatuses.statuses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5164,
  serialized_end=5213,
)


_QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY = _descriptor.Descriptor(
  name='SchedulerSpecificInformationEntry',
  full_name='xenon.QueueStatus.SchedulerSpecificInformationEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='xenon.QueueStatus.SchedulerSpecificInformationEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.QueueStatus.SchedulerSpecificInformationEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5011,
  serialized_end=5078,
)

_QUEUESTATUS = _descriptor.Descriptor(
  name='QueueStatus',
  full_name='xenon.QueueStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='xenon.QueueStatus.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='xenon.QueueStatus.scheduler', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='schedulerSpecificInformation', full_name='xenon.QueueStatus.schedulerSpecificInformation', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='xenon.QueueStatus.error', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5216,
  serialized_end=5456,
)


_QUEUESTATUSES = _descriptor.Descriptor(
  name='QueueStatuses',
  full_name='xenon.QueueStatuses',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='statuses', full_name='xenon.QueueStatuses.statuses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5458,
  serialized_end=5511,
)


_SUBMITINTERACTIVEJOBRESPONSE = _descriptor.Descriptor(
  name='SubmitInteractiveJobResponse',
  full_name='xenon.SubmitInteractiveJobResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stdout', full_name='xenon.SubmitInteractiveJobResponse.stdout', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stderr', full_name='xenon.SubmitInteractiveJobResponse.stderr', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='job', full_name='xenon.SubmitInteractiveJobResponse.job', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5513,
  serialized_end=5600,
)


_IS = _descriptor.Descriptor(
  name='Is',
  full_name='xenon.Is',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='xenon.Is.value', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5602,
  serialized_end=5621,
)

_PROPERTIES_PROPERTIESENTRY.containing_type = _PROPERTIES
_PROPERTIES.fields_by_name['properties'].message_type = _PROPERTIES_PROPERTIESENTRY
_PROPERTYDESCRIPTION.fields_by_name['type'].enum_type = _PROPERTYDESCRIPTION_TYPE
_PROPERTYDESCRIPTION_TYPE.containing_type = _PROPERTYDESCRIPTION
_PROPERTYDESCRIPTIONS.fields_by_name['properties'].message_type = _PROPERTYDESCRIPTION
_SCHEDULERADAPTORDESCRIPTION.fields_by_name['supportedProperties'].message_type = _PROPERTYDESCRIPTION
_SCHEDULERADAPTORDESCRIPTIONS.fields_by_name['descriptions'].message_type = _SCHEDULERADAPTORDESCRIPTION
_FILESYSTEMADAPTORDESCRIPTION.fields_by_name['supportedProperties'].message_type = _PROPERTYDESCRIPTION
_FILESYSTEMADAPTORDESCRIPTIONS.fields_by_name['descriptions'].message_type = _FILESYSTEMADAPTORDESCRIPTION
_CREATEFILESYSTEMREQUEST_PROPERTIESENTRY.containing_type = _CREATEFILESYSTEMREQUEST
_CREATEFILESYSTEMREQUEST.fields_by_name['properties'].message_type = _CREATEFILESYSTEMREQUEST_PROPERTIESENTRY
_CREATEFILESYSTEMREQUEST.fields_by_name['certificateCred'].message_type = _CERTIFICATECREDENTIAL
_CREATEFILESYSTEMREQUEST.fields_by_name['passwordCred'].message_type = _PASSWORDCREDENTIAL
_CREATEFILESYSTEMREQUEST.fields_by_name['defaultCred'].message_type = _DEFAULTCREDENTIAL
_CREATEFILESYSTEMREQUEST.oneofs_by_name['credential'].fields.append(
  _CREATEFILESYSTEMREQUEST.fields_by_name['certificateCred'])
_CREATEFILESYSTEMREQUEST.fields_by_name['certificateCred'].containing_oneof = _CREATEFILESYSTEMREQUEST.oneofs_by_name['credential']
_CREATEFILESYSTEMREQUEST.oneofs_by_name['credential'].fields.append(
  _CREATEFILESYSTEMREQUEST.fields_by_name['passwordCred'])
_CREATEFILESYSTEMREQUEST.fields_by_name['passwordCred'].containing_oneof = _CREATEFILESYSTEMREQUEST.oneofs_by_name['credential']
_CREATEFILESYSTEMREQUEST.oneofs_by_name['credential'].fields.append(
  _CREATEFILESYSTEMREQUEST.fields_by_name['defaultCred'])
_CREATEFILESYSTEMREQUEST.fields_by_name['defaultCred'].containing_oneof = _CREATEFILESYSTEMREQUEST.oneofs_by_name['credential']
_FILESYSTEMS.fields_by_name['filesystems'].message_type = _FILESYSTEM
_PATH.fields_by_name['filesystem'].message_type = _FILESYSTEM
_DELETEREQUEST.fields_by_name['path'].message_type = _PATH
_COPYREQUEST.fields_by_name['source'].message_type = _PATH
_COPYREQUEST.fields_by_name['target'].message_type = _PATH
_COPYREQUEST.fields_by_name['mode'].enum_type = _COPYMODE
_RENAMEREQUEST.fields_by_name['filesystem'].message_type = _FILESYSTEM
_CREATESYMBOLICLINKREQUEST.fields_by_name['filesystem'].message_type = _FILESYSTEM
_COPYOPERATION.fields_by_name['filesystem'].message_type = _FILESYSTEM
_COPYOPERATIONWITHTIMEOUT.fields_by_name['filesystem'].message_type = _FILESYSTEM
_COPYSTATUS.fields_by_name['copyOperation'].message_type = _COPYOPERATION
_PATHATTRIBUTES.fields_by_name['path'].message_type = _PATH
_PATHATTRIBUTES.fields_by_name['permissions'].enum_type = _POSIXFILEPERMISSION
_SETPOSIXFILEPERMISSIONSREQUEST.fields_by_name['path'].message_type = _PATH
_SETPOSIXFILEPERMISSIONSREQUEST.fields_by_name['permissions'].enum_type = _POSIXFILEPERMISSION
_WRITETOFILEREQUEST.fields_by_name['path'].message_type = _PATH
_APPENDTOFILEREQUEST.fields_by_name['path'].message_type = _PATH
_LISTREQUEST.fields_by_name['dir'].message_type = _PATH
_CREATESCHEDULERREQUEST_PROPERTIESENTRY.containing_type = _CREATESCHEDULERREQUEST
_CREATESCHEDULERREQUEST.fields_by_name['properties'].message_type = _CREATESCHEDULERREQUEST_PROPERTIESENTRY
_CREATESCHEDULERREQUEST.fields_by_name['certificateCred'].message_type = _CERTIFICATECREDENTIAL
_CREATESCHEDULERREQUEST.fields_by_name['passwordCred'].message_type = _PASSWORDCREDENTIAL
_CREATESCHEDULERREQUEST.fields_by_name['defaultCred'].message_type = _DEFAULTCREDENTIAL
_CREATESCHEDULERREQUEST.oneofs_by_name['credential'].fields.append(
  _CREATESCHEDULERREQUEST.fields_by_name['certificateCred'])
_CREATESCHEDULERREQUEST.fields_by_name['certificateCred'].containing_oneof = _CREATESCHEDULERREQUEST.oneofs_by_name['credential']
_CREATESCHEDULERREQUEST.oneofs_by_name['credential'].fields.append(
  _CREATESCHEDULERREQUEST.fields_by_name['passwordCred'])
_CREATESCHEDULERREQUEST.fields_by_name['passwordCred'].containing_oneof = _CREATESCHEDULERREQUEST.oneofs_by_name['credential']
_CREATESCHEDULERREQUEST.oneofs_by_name['credential'].fields.append(
  _CREATESCHEDULERREQUEST.fields_by_name['defaultCred'])
_CREATESCHEDULERREQUEST.fields_by_name['defaultCred'].containing_oneof = _CREATESCHEDULERREQUEST.oneofs_by_name['credential']
_SCHEDULERS.fields_by_name['schedulers'].message_type = _SCHEDULER
_JOBDESCRIPTION_ENVIRONMENTENTRY.containing_type = _JOBDESCRIPTION
_JOBDESCRIPTION_OPTIONSENTRY.containing_type = _JOBDESCRIPTION
_JOBDESCRIPTION.fields_by_name['environment'].message_type = _JOBDESCRIPTION_ENVIRONMENTENTRY
_JOBDESCRIPTION.fields_by_name['options'].message_type = _JOBDESCRIPTION_OPTIONSENTRY
_SUBMITBATCHJOBREQUEST.fields_by_name['scheduler'].message_type = _SCHEDULER
_SUBMITBATCHJOBREQUEST.fields_by_name['description'].message_type = _JOBDESCRIPTION
_SUBMITINTERACTIVEJOBREQUEST.fields_by_name['scheduler'].message_type = _SCHEDULER
_SUBMITINTERACTIVEJOBREQUEST.fields_by_name['description'].message_type = _JOBDESCRIPTION
_JOB.fields_by_name['scheduler'].message_type = _SCHEDULER
_JOBS.fields_by_name['jobs'].message_type = _JOB
_JOBWITHTIMEOUT.fields_by_name['scheduler'].message_type = _SCHEDULER
_SCHEDULERANDQUEUES.fields_by_name['scheduler'].message_type = _SCHEDULER
_SCHEDULERANDQUEUE.fields_by_name['scheduler'].message_type = _SCHEDULER
_JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY.containing_type = _JOBSTATUS
_JOBSTATUS.fields_by_name['schedulerSpecificInformation'].message_type = _JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY
_JOBSTATUS.fields_by_name['errorType'].enum_type = _JOBSTATUS_ERRORTYPE
_JOBSTATUS.fields_by_name['job'].message_type = _JOB
_JOBSTATUS_ERRORTYPE.containing_type = _JOBSTATUS
_JOBSTATUSES.fields_by_name['statuses'].message_type = _JOBSTATUS
_QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY.containing_type = _QUEUESTATUS
_QUEUESTATUS.fields_by_name['scheduler'].message_type = _SCHEDULER
_QUEUESTATUS.fields_by_name['schedulerSpecificInformation'].message_type = _QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY
_QUEUESTATUSES.fields_by_name['statuses'].message_type = _QUEUESTATUS
_SUBMITINTERACTIVEJOBRESPONSE.fields_by_name['job'].message_type = _JOB
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Properties'] = _PROPERTIES
DESCRIPTOR.message_types_by_name['PropertyDescription'] = _PROPERTYDESCRIPTION
DESCRIPTOR.message_types_by_name['PropertyDescriptions'] = _PROPERTYDESCRIPTIONS
DESCRIPTOR.message_types_by_name['SchedulerAdaptorDescription'] = _SCHEDULERADAPTORDESCRIPTION
DESCRIPTOR.message_types_by_name['SchedulerAdaptorDescriptions'] = _SCHEDULERADAPTORDESCRIPTIONS
DESCRIPTOR.message_types_by_name['FileSystemAdaptorDescription'] = _FILESYSTEMADAPTORDESCRIPTION
DESCRIPTOR.message_types_by_name['FileSystemAdaptorDescriptions'] = _FILESYSTEMADAPTORDESCRIPTIONS
DESCRIPTOR.message_types_by_name['AdaptorName'] = _ADAPTORNAME
DESCRIPTOR.message_types_by_name['CertificateCredential'] = _CERTIFICATECREDENTIAL
DESCRIPTOR.message_types_by_name['PasswordCredential'] = _PASSWORDCREDENTIAL
DESCRIPTOR.message_types_by_name['DefaultCredential'] = _DEFAULTCREDENTIAL
DESCRIPTOR.message_types_by_name['CreateFileSystemRequest'] = _CREATEFILESYSTEMREQUEST
DESCRIPTOR.message_types_by_name['FileSystem'] = _FILESYSTEM
DESCRIPTOR.message_types_by_name['FileSystems'] = _FILESYSTEMS
DESCRIPTOR.message_types_by_name['Path'] = _PATH
DESCRIPTOR.message_types_by_name['DeleteRequest'] = _DELETEREQUEST
DESCRIPTOR.message_types_by_name['CopyRequest'] = _COPYREQUEST
DESCRIPTOR.message_types_by_name['RenameRequest'] = _RENAMEREQUEST
DESCRIPTOR.message_types_by_name['CreateSymbolicLinkRequest'] = _CREATESYMBOLICLINKREQUEST
DESCRIPTOR.message_types_by_name['CopyOperation'] = _COPYOPERATION
DESCRIPTOR.message_types_by_name['CopyOperationWithTimeout'] = _COPYOPERATIONWITHTIMEOUT
DESCRIPTOR.message_types_by_name['CopyStatus'] = _COPYSTATUS
DESCRIPTOR.message_types_by_name['PathAttributes'] = _PATHATTRIBUTES
DESCRIPTOR.message_types_by_name['SetPosixFilePermissionsRequest'] = _SETPOSIXFILEPERMISSIONSREQUEST
DESCRIPTOR.message_types_by_name['ReadFromFileResponse'] = _READFROMFILERESPONSE
DESCRIPTOR.message_types_by_name['WriteToFileRequest'] = _WRITETOFILEREQUEST
DESCRIPTOR.message_types_by_name['AppendToFileRequest'] = _APPENDTOFILEREQUEST
DESCRIPTOR.message_types_by_name['ListRequest'] = _LISTREQUEST
DESCRIPTOR.message_types_by_name['CreateSchedulerRequest'] = _CREATESCHEDULERREQUEST
DESCRIPTOR.message_types_by_name['Scheduler'] = _SCHEDULER
DESCRIPTOR.message_types_by_name['Schedulers'] = _SCHEDULERS
DESCRIPTOR.message_types_by_name['JobDescription'] = _JOBDESCRIPTION
DESCRIPTOR.message_types_by_name['SubmitBatchJobRequest'] = _SUBMITBATCHJOBREQUEST
DESCRIPTOR.message_types_by_name['SubmitInteractiveJobRequest'] = _SUBMITINTERACTIVEJOBREQUEST
DESCRIPTOR.message_types_by_name['Job'] = _JOB
DESCRIPTOR.message_types_by_name['Jobs'] = _JOBS
DESCRIPTOR.message_types_by_name['JobWithTimeout'] = _JOBWITHTIMEOUT
DESCRIPTOR.message_types_by_name['Queue'] = _QUEUE
DESCRIPTOR.message_types_by_name['Queues'] = _QUEUES
DESCRIPTOR.message_types_by_name['SchedulerAndQueues'] = _SCHEDULERANDQUEUES
DESCRIPTOR.message_types_by_name['SchedulerAndQueue'] = _SCHEDULERANDQUEUE
DESCRIPTOR.message_types_by_name['JobStatus'] = _JOBSTATUS
DESCRIPTOR.message_types_by_name['JobStatuses'] = _JOBSTATUSES
DESCRIPTOR.message_types_by_name['QueueStatus'] = _QUEUESTATUS
DESCRIPTOR.message_types_by_name['QueueStatuses'] = _QUEUESTATUSES
DESCRIPTOR.message_types_by_name['SubmitInteractiveJobResponse'] = _SUBMITINTERACTIVEJOBRESPONSE
DESCRIPTOR.message_types_by_name['Is'] = _IS
DESCRIPTOR.enum_types_by_name['CopyMode'] = _COPYMODE
DESCRIPTOR.enum_types_by_name['PosixFilePermission'] = _POSIXFILEPERMISSION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Empty)
  ))
_sym_db.RegisterMessage(Empty)

Properties = _reflection.GeneratedProtocolMessageType('Properties', (_message.Message,), dict(

  PropertiesEntry = _reflection.GeneratedProtocolMessageType('PropertiesEntry', (_message.Message,), dict(
    DESCRIPTOR = _PROPERTIES_PROPERTIESENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.Properties.PropertiesEntry)
    ))
  ,
  DESCRIPTOR = _PROPERTIES,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Properties)
  ))
_sym_db.RegisterMessage(Properties)
_sym_db.RegisterMessage(Properties.PropertiesEntry)

PropertyDescription = _reflection.GeneratedProtocolMessageType('PropertyDescription', (_message.Message,), dict(
  DESCRIPTOR = _PROPERTYDESCRIPTION,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.PropertyDescription)
  ))
_sym_db.RegisterMessage(PropertyDescription)

PropertyDescriptions = _reflection.GeneratedProtocolMessageType('PropertyDescriptions', (_message.Message,), dict(
  DESCRIPTOR = _PROPERTYDESCRIPTIONS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.PropertyDescriptions)
  ))
_sym_db.RegisterMessage(PropertyDescriptions)

SchedulerAdaptorDescription = _reflection.GeneratedProtocolMessageType('SchedulerAdaptorDescription', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULERADAPTORDESCRIPTION,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SchedulerAdaptorDescription)
  ))
_sym_db.RegisterMessage(SchedulerAdaptorDescription)

SchedulerAdaptorDescriptions = _reflection.GeneratedProtocolMessageType('SchedulerAdaptorDescriptions', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULERADAPTORDESCRIPTIONS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SchedulerAdaptorDescriptions)
  ))
_sym_db.RegisterMessage(SchedulerAdaptorDescriptions)

FileSystemAdaptorDescription = _reflection.GeneratedProtocolMessageType('FileSystemAdaptorDescription', (_message.Message,), dict(
  DESCRIPTOR = _FILESYSTEMADAPTORDESCRIPTION,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.FileSystemAdaptorDescription)
  ))
_sym_db.RegisterMessage(FileSystemAdaptorDescription)

FileSystemAdaptorDescriptions = _reflection.GeneratedProtocolMessageType('FileSystemAdaptorDescriptions', (_message.Message,), dict(
  DESCRIPTOR = _FILESYSTEMADAPTORDESCRIPTIONS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.FileSystemAdaptorDescriptions)
  ))
_sym_db.RegisterMessage(FileSystemAdaptorDescriptions)

AdaptorName = _reflection.GeneratedProtocolMessageType('AdaptorName', (_message.Message,), dict(
  DESCRIPTOR = _ADAPTORNAME,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.AdaptorName)
  ))
_sym_db.RegisterMessage(AdaptorName)

CertificateCredential = _reflection.GeneratedProtocolMessageType('CertificateCredential', (_message.Message,), dict(
  DESCRIPTOR = _CERTIFICATECREDENTIAL,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CertificateCredential)
  ))
_sym_db.RegisterMessage(CertificateCredential)

PasswordCredential = _reflection.GeneratedProtocolMessageType('PasswordCredential', (_message.Message,), dict(
  DESCRIPTOR = _PASSWORDCREDENTIAL,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.PasswordCredential)
  ))
_sym_db.RegisterMessage(PasswordCredential)

DefaultCredential = _reflection.GeneratedProtocolMessageType('DefaultCredential', (_message.Message,), dict(
  DESCRIPTOR = _DEFAULTCREDENTIAL,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.DefaultCredential)
  ))
_sym_db.RegisterMessage(DefaultCredential)

CreateFileSystemRequest = _reflection.GeneratedProtocolMessageType('CreateFileSystemRequest', (_message.Message,), dict(

  PropertiesEntry = _reflection.GeneratedProtocolMessageType('PropertiesEntry', (_message.Message,), dict(
    DESCRIPTOR = _CREATEFILESYSTEMREQUEST_PROPERTIESENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.CreateFileSystemRequest.PropertiesEntry)
    ))
  ,
  DESCRIPTOR = _CREATEFILESYSTEMREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CreateFileSystemRequest)
  ))
_sym_db.RegisterMessage(CreateFileSystemRequest)
_sym_db.RegisterMessage(CreateFileSystemRequest.PropertiesEntry)

FileSystem = _reflection.GeneratedProtocolMessageType('FileSystem', (_message.Message,), dict(
  DESCRIPTOR = _FILESYSTEM,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.FileSystem)
  ))
_sym_db.RegisterMessage(FileSystem)

FileSystems = _reflection.GeneratedProtocolMessageType('FileSystems', (_message.Message,), dict(
  DESCRIPTOR = _FILESYSTEMS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.FileSystems)
  ))
_sym_db.RegisterMessage(FileSystems)

Path = _reflection.GeneratedProtocolMessageType('Path', (_message.Message,), dict(
  DESCRIPTOR = _PATH,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Path)
  ))
_sym_db.RegisterMessage(Path)

DeleteRequest = _reflection.GeneratedProtocolMessageType('DeleteRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.DeleteRequest)
  ))
_sym_db.RegisterMessage(DeleteRequest)

CopyRequest = _reflection.GeneratedProtocolMessageType('CopyRequest', (_message.Message,), dict(
  DESCRIPTOR = _COPYREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CopyRequest)
  ))
_sym_db.RegisterMessage(CopyRequest)

RenameRequest = _reflection.GeneratedProtocolMessageType('RenameRequest', (_message.Message,), dict(
  DESCRIPTOR = _RENAMEREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.RenameRequest)
  ))
_sym_db.RegisterMessage(RenameRequest)

CreateSymbolicLinkRequest = _reflection.GeneratedProtocolMessageType('CreateSymbolicLinkRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATESYMBOLICLINKREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CreateSymbolicLinkRequest)
  ))
_sym_db.RegisterMessage(CreateSymbolicLinkRequest)

CopyOperation = _reflection.GeneratedProtocolMessageType('CopyOperation', (_message.Message,), dict(
  DESCRIPTOR = _COPYOPERATION,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CopyOperation)
  ))
_sym_db.RegisterMessage(CopyOperation)

CopyOperationWithTimeout = _reflection.GeneratedProtocolMessageType('CopyOperationWithTimeout', (_message.Message,), dict(
  DESCRIPTOR = _COPYOPERATIONWITHTIMEOUT,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CopyOperationWithTimeout)
  ))
_sym_db.RegisterMessage(CopyOperationWithTimeout)

CopyStatus = _reflection.GeneratedProtocolMessageType('CopyStatus', (_message.Message,), dict(
  DESCRIPTOR = _COPYSTATUS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CopyStatus)
  ))
_sym_db.RegisterMessage(CopyStatus)

PathAttributes = _reflection.GeneratedProtocolMessageType('PathAttributes', (_message.Message,), dict(
  DESCRIPTOR = _PATHATTRIBUTES,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.PathAttributes)
  ))
_sym_db.RegisterMessage(PathAttributes)

SetPosixFilePermissionsRequest = _reflection.GeneratedProtocolMessageType('SetPosixFilePermissionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETPOSIXFILEPERMISSIONSREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SetPosixFilePermissionsRequest)
  ))
_sym_db.RegisterMessage(SetPosixFilePermissionsRequest)

ReadFromFileResponse = _reflection.GeneratedProtocolMessageType('ReadFromFileResponse', (_message.Message,), dict(
  DESCRIPTOR = _READFROMFILERESPONSE,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.ReadFromFileResponse)
  ))
_sym_db.RegisterMessage(ReadFromFileResponse)

WriteToFileRequest = _reflection.GeneratedProtocolMessageType('WriteToFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _WRITETOFILEREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.WriteToFileRequest)
  ))
_sym_db.RegisterMessage(WriteToFileRequest)

AppendToFileRequest = _reflection.GeneratedProtocolMessageType('AppendToFileRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPENDTOFILEREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.AppendToFileRequest)
  ))
_sym_db.RegisterMessage(AppendToFileRequest)

ListRequest = _reflection.GeneratedProtocolMessageType('ListRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.ListRequest)
  ))
_sym_db.RegisterMessage(ListRequest)

CreateSchedulerRequest = _reflection.GeneratedProtocolMessageType('CreateSchedulerRequest', (_message.Message,), dict(

  PropertiesEntry = _reflection.GeneratedProtocolMessageType('PropertiesEntry', (_message.Message,), dict(
    DESCRIPTOR = _CREATESCHEDULERREQUEST_PROPERTIESENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.CreateSchedulerRequest.PropertiesEntry)
    ))
  ,
  DESCRIPTOR = _CREATESCHEDULERREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.CreateSchedulerRequest)
  ))
_sym_db.RegisterMessage(CreateSchedulerRequest)
_sym_db.RegisterMessage(CreateSchedulerRequest.PropertiesEntry)

Scheduler = _reflection.GeneratedProtocolMessageType('Scheduler', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULER,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Scheduler)
  ))
_sym_db.RegisterMessage(Scheduler)

Schedulers = _reflection.GeneratedProtocolMessageType('Schedulers', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULERS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Schedulers)
  ))
_sym_db.RegisterMessage(Schedulers)

JobDescription = _reflection.GeneratedProtocolMessageType('JobDescription', (_message.Message,), dict(

  EnvironmentEntry = _reflection.GeneratedProtocolMessageType('EnvironmentEntry', (_message.Message,), dict(
    DESCRIPTOR = _JOBDESCRIPTION_ENVIRONMENTENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.JobDescription.EnvironmentEntry)
    ))
  ,

  OptionsEntry = _reflection.GeneratedProtocolMessageType('OptionsEntry', (_message.Message,), dict(
    DESCRIPTOR = _JOBDESCRIPTION_OPTIONSENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.JobDescription.OptionsEntry)
    ))
  ,
  DESCRIPTOR = _JOBDESCRIPTION,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.JobDescription)
  ))
_sym_db.RegisterMessage(JobDescription)
_sym_db.RegisterMessage(JobDescription.EnvironmentEntry)
_sym_db.RegisterMessage(JobDescription.OptionsEntry)

SubmitBatchJobRequest = _reflection.GeneratedProtocolMessageType('SubmitBatchJobRequest', (_message.Message,), dict(
  DESCRIPTOR = _SUBMITBATCHJOBREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SubmitBatchJobRequest)
  ))
_sym_db.RegisterMessage(SubmitBatchJobRequest)

SubmitInteractiveJobRequest = _reflection.GeneratedProtocolMessageType('SubmitInteractiveJobRequest', (_message.Message,), dict(
  DESCRIPTOR = _SUBMITINTERACTIVEJOBREQUEST,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SubmitInteractiveJobRequest)
  ))
_sym_db.RegisterMessage(SubmitInteractiveJobRequest)

Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(
  DESCRIPTOR = _JOB,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Job)
  ))
_sym_db.RegisterMessage(Job)

Jobs = _reflection.GeneratedProtocolMessageType('Jobs', (_message.Message,), dict(
  DESCRIPTOR = _JOBS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Jobs)
  ))
_sym_db.RegisterMessage(Jobs)

JobWithTimeout = _reflection.GeneratedProtocolMessageType('JobWithTimeout', (_message.Message,), dict(
  DESCRIPTOR = _JOBWITHTIMEOUT,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.JobWithTimeout)
  ))
_sym_db.RegisterMessage(JobWithTimeout)

Queue = _reflection.GeneratedProtocolMessageType('Queue', (_message.Message,), dict(
  DESCRIPTOR = _QUEUE,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Queue)
  ))
_sym_db.RegisterMessage(Queue)

Queues = _reflection.GeneratedProtocolMessageType('Queues', (_message.Message,), dict(
  DESCRIPTOR = _QUEUES,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Queues)
  ))
_sym_db.RegisterMessage(Queues)

SchedulerAndQueues = _reflection.GeneratedProtocolMessageType('SchedulerAndQueues', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULERANDQUEUES,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SchedulerAndQueues)
  ))
_sym_db.RegisterMessage(SchedulerAndQueues)

SchedulerAndQueue = _reflection.GeneratedProtocolMessageType('SchedulerAndQueue', (_message.Message,), dict(
  DESCRIPTOR = _SCHEDULERANDQUEUE,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SchedulerAndQueue)
  ))
_sym_db.RegisterMessage(SchedulerAndQueue)

JobStatus = _reflection.GeneratedProtocolMessageType('JobStatus', (_message.Message,), dict(

  SchedulerSpecificInformationEntry = _reflection.GeneratedProtocolMessageType('SchedulerSpecificInformationEntry', (_message.Message,), dict(
    DESCRIPTOR = _JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.JobStatus.SchedulerSpecificInformationEntry)
    ))
  ,
  DESCRIPTOR = _JOBSTATUS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.JobStatus)
  ))
_sym_db.RegisterMessage(JobStatus)
_sym_db.RegisterMessage(JobStatus.SchedulerSpecificInformationEntry)

JobStatuses = _reflection.GeneratedProtocolMessageType('JobStatuses', (_message.Message,), dict(
  DESCRIPTOR = _JOBSTATUSES,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.JobStatuses)
  ))
_sym_db.RegisterMessage(JobStatuses)

QueueStatus = _reflection.GeneratedProtocolMessageType('QueueStatus', (_message.Message,), dict(

  SchedulerSpecificInformationEntry = _reflection.GeneratedProtocolMessageType('SchedulerSpecificInformationEntry', (_message.Message,), dict(
    DESCRIPTOR = _QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY,
    __module__ = 'xenon.proto.xenon_pb2'
    # @@protoc_insertion_point(class_scope:xenon.QueueStatus.SchedulerSpecificInformationEntry)
    ))
  ,
  DESCRIPTOR = _QUEUESTATUS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.QueueStatus)
  ))
_sym_db.RegisterMessage(QueueStatus)
_sym_db.RegisterMessage(QueueStatus.SchedulerSpecificInformationEntry)

QueueStatuses = _reflection.GeneratedProtocolMessageType('QueueStatuses', (_message.Message,), dict(
  DESCRIPTOR = _QUEUESTATUSES,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.QueueStatuses)
  ))
_sym_db.RegisterMessage(QueueStatuses)

SubmitInteractiveJobResponse = _reflection.GeneratedProtocolMessageType('SubmitInteractiveJobResponse', (_message.Message,), dict(
  DESCRIPTOR = _SUBMITINTERACTIVEJOBRESPONSE,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.SubmitInteractiveJobResponse)
  ))
_sym_db.RegisterMessage(SubmitInteractiveJobResponse)

Is = _reflection.GeneratedProtocolMessageType('Is', (_message.Message,), dict(
  DESCRIPTOR = _IS,
  __module__ = 'xenon.proto.xenon_pb2'
  # @@protoc_insertion_point(class_scope:xenon.Is)
  ))
_sym_db.RegisterMessage(Is)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\034nl.esciencecenter.xenon.grpcB\nXenonProto'))
_PROPERTIES_PROPERTIESENTRY.has_options = True
_PROPERTIES_PROPERTIESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CREATEFILESYSTEMREQUEST_PROPERTIESENTRY.has_options = True
_CREATEFILESYSTEMREQUEST_PROPERTIESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CREATESCHEDULERREQUEST_PROPERTIESENTRY.has_options = True
_CREATESCHEDULERREQUEST_PROPERTIESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_JOBDESCRIPTION_ENVIRONMENTENTRY.has_options = True
_JOBDESCRIPTION_ENVIRONMENTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_JOBDESCRIPTION_OPTIONSENTRY.has_options = True
_JOBDESCRIPTION_OPTIONSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY.has_options = True
_JOBSTATUS_SCHEDULERSPECIFICINFORMATIONENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY.has_options = True
_QUEUESTATUS_SCHEDULERSPECIFICINFORMATIONENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class XenonFileSystemsStub(object):
    """XenonFiles represents the Xenon nl.esciencecenter.xenon.filesystems.FileSystem class.
    This interface contains various methods for creating and closing FileSystems, creating Paths and operations on these Paths.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.getAdaptorDescriptions = channel.unary_unary(
          '/xenon.XenonFileSystems/getAdaptorDescriptions',
          request_serializer=Empty.SerializeToString,
          response_deserializer=FileSystemAdaptorDescriptions.FromString,
          )
      self.getAdaptorDescription = channel.unary_unary(
          '/xenon.XenonFileSystems/getAdaptorDescription',
          request_serializer=AdaptorName.SerializeToString,
          response_deserializer=FileSystemAdaptorDescription.FromString,
          )
      self.create = channel.unary_unary(
          '/xenon.XenonFileSystems/create',
          request_serializer=CreateFileSystemRequest.SerializeToString,
          response_deserializer=FileSystem.FromString,
          )
      self.createDirectories = channel.unary_unary(
          '/xenon.XenonFileSystems/createDirectories',
          request_serializer=Path.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.createDirectory = channel.unary_unary(
          '/xenon.XenonFileSystems/createDirectory',
          request_serializer=Path.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.createFile = channel.unary_unary(
          '/xenon.XenonFileSystems/createFile',
          request_serializer=Path.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.createSymbolicLink = channel.unary_unary(
          '/xenon.XenonFileSystems/createSymbolicLink',
          request_serializer=CreateSymbolicLinkRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.copy = channel.unary_unary(
          '/xenon.XenonFileSystems/copy',
          request_serializer=CopyRequest.SerializeToString,
          response_deserializer=CopyOperation.FromString,
          )
      self.cancel = channel.unary_unary(
          '/xenon.XenonFileSystems/cancel',
          request_serializer=CopyOperation.SerializeToString,
          response_deserializer=CopyStatus.FromString,
          )
      self.getStatus = channel.unary_unary(
          '/xenon.XenonFileSystems/getStatus',
          request_serializer=CopyOperation.SerializeToString,
          response_deserializer=CopyStatus.FromString,
          )
      self.rename = channel.unary_unary(
          '/xenon.XenonFileSystems/rename',
          request_serializer=RenameRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.delete = channel.unary_unary(
          '/xenon.XenonFileSystems/delete',
          request_serializer=DeleteRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.exists = channel.unary_unary(
          '/xenon.XenonFileSystems/exists',
          request_serializer=Path.SerializeToString,
          response_deserializer=Is.FromString,
          )
      self.readFromFile = channel.unary_stream(
          '/xenon.XenonFileSystems/readFromFile',
          request_serializer=Path.SerializeToString,
          response_deserializer=ReadFromFileResponse.FromString,
          )
      self.writeToFile = channel.stream_unary(
          '/xenon.XenonFileSystems/writeToFile',
          request_serializer=WriteToFileRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.appendToFile = channel.stream_unary(
          '/xenon.XenonFileSystems/appendToFile',
          request_serializer=AppendToFileRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.list = channel.unary_stream(
          '/xenon.XenonFileSystems/list',
          request_serializer=ListRequest.SerializeToString,
          response_deserializer=PathAttributes.FromString,
          )
      self.getAttributes = channel.unary_unary(
          '/xenon.XenonFileSystems/getAttributes',
          request_serializer=Path.SerializeToString,
          response_deserializer=PathAttributes.FromString,
          )
      self.getWorkingDirectory = channel.unary_unary(
          '/xenon.XenonFileSystems/getWorkingDirectory',
          request_serializer=FileSystem.SerializeToString,
          response_deserializer=Path.FromString,
          )
      self.setWorkingDirectory = channel.unary_unary(
          '/xenon.XenonFileSystems/setWorkingDirectory',
          request_serializer=Path.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.setPosixFilePermissions = channel.unary_unary(
          '/xenon.XenonFileSystems/setPosixFilePermissions',
          request_serializer=SetPosixFilePermissionsRequest.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.readSymbolicLink = channel.unary_unary(
          '/xenon.XenonFileSystems/readSymbolicLink',
          request_serializer=Path.SerializeToString,
          response_deserializer=Path.FromString,
          )
      self.isOpen = channel.unary_unary(
          '/xenon.XenonFileSystems/isOpen',
          request_serializer=FileSystem.SerializeToString,
          response_deserializer=Is.FromString,
          )
      self.close = channel.unary_unary(
          '/xenon.XenonFileSystems/close',
          request_serializer=FileSystem.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.waitUntilDone = channel.unary_unary(
          '/xenon.XenonFileSystems/waitUntilDone',
          request_serializer=CopyOperationWithTimeout.SerializeToString,
          response_deserializer=CopyStatus.FromString,
          )
      self.localFileSystems = channel.unary_unary(
          '/xenon.XenonFileSystems/localFileSystems',
          request_serializer=Empty.SerializeToString,
          response_deserializer=FileSystems.FromString,
          )
      self.listFileSystems = channel.unary_unary(
          '/xenon.XenonFileSystems/listFileSystems',
          request_serializer=Empty.SerializeToString,
          response_deserializer=FileSystems.FromString,
          )


  class XenonFileSystemsServicer(object):
    """XenonFiles represents the Xenon nl.esciencecenter.xenon.filesystems.FileSystem class.
    This interface contains various methods for creating and closing FileSystems, creating Paths and operations on these Paths.
    """

    def getAdaptorDescriptions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getAdaptorDescription(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def createDirectories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def createDirectory(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def createFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def createSymbolicLink(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def copy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def cancel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def rename(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def exists(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def readFromFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def writeToFile(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def appendToFile(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def list(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getAttributes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getWorkingDirectory(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def setWorkingDirectory(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def setPosixFilePermissions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def readSymbolicLink(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def isOpen(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def close(self, request, context):
      """Closes a filestem, any actions running it with this filestystem will be terminated, will also forget the filesystem
      Any pending/running copy operations will be killed
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def waitUntilDone(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def localFileSystems(self, request, context):
      """Returns filesystems for all local drives
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def listFileSystems(self, request, context):
      """List the created filesystems
      Specific to grpc, not part of Xenon library
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_XenonFileSystemsServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'getAdaptorDescriptions': grpc.unary_unary_rpc_method_handler(
            servicer.getAdaptorDescriptions,
            request_deserializer=Empty.FromString,
            response_serializer=FileSystemAdaptorDescriptions.SerializeToString,
        ),
        'getAdaptorDescription': grpc.unary_unary_rpc_method_handler(
            servicer.getAdaptorDescription,
            request_deserializer=AdaptorName.FromString,
            response_serializer=FileSystemAdaptorDescription.SerializeToString,
        ),
        'create': grpc.unary_unary_rpc_method_handler(
            servicer.create,
            request_deserializer=CreateFileSystemRequest.FromString,
            response_serializer=FileSystem.SerializeToString,
        ),
        'createDirectories': grpc.unary_unary_rpc_method_handler(
            servicer.createDirectories,
            request_deserializer=Path.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'createDirectory': grpc.unary_unary_rpc_method_handler(
            servicer.createDirectory,
            request_deserializer=Path.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'createFile': grpc.unary_unary_rpc_method_handler(
            servicer.createFile,
            request_deserializer=Path.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'createSymbolicLink': grpc.unary_unary_rpc_method_handler(
            servicer.createSymbolicLink,
            request_deserializer=CreateSymbolicLinkRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'copy': grpc.unary_unary_rpc_method_handler(
            servicer.copy,
            request_deserializer=CopyRequest.FromString,
            response_serializer=CopyOperation.SerializeToString,
        ),
        'cancel': grpc.unary_unary_rpc_method_handler(
            servicer.cancel,
            request_deserializer=CopyOperation.FromString,
            response_serializer=CopyStatus.SerializeToString,
        ),
        'getStatus': grpc.unary_unary_rpc_method_handler(
            servicer.getStatus,
            request_deserializer=CopyOperation.FromString,
            response_serializer=CopyStatus.SerializeToString,
        ),
        'rename': grpc.unary_unary_rpc_method_handler(
            servicer.rename,
            request_deserializer=RenameRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'delete': grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=DeleteRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'exists': grpc.unary_unary_rpc_method_handler(
            servicer.exists,
            request_deserializer=Path.FromString,
            response_serializer=Is.SerializeToString,
        ),
        'readFromFile': grpc.unary_stream_rpc_method_handler(
            servicer.readFromFile,
            request_deserializer=Path.FromString,
            response_serializer=ReadFromFileResponse.SerializeToString,
        ),
        'writeToFile': grpc.stream_unary_rpc_method_handler(
            servicer.writeToFile,
            request_deserializer=WriteToFileRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'appendToFile': grpc.stream_unary_rpc_method_handler(
            servicer.appendToFile,
            request_deserializer=AppendToFileRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'list': grpc.unary_stream_rpc_method_handler(
            servicer.list,
            request_deserializer=ListRequest.FromString,
            response_serializer=PathAttributes.SerializeToString,
        ),
        'getAttributes': grpc.unary_unary_rpc_method_handler(
            servicer.getAttributes,
            request_deserializer=Path.FromString,
            response_serializer=PathAttributes.SerializeToString,
        ),
        'getWorkingDirectory': grpc.unary_unary_rpc_method_handler(
            servicer.getWorkingDirectory,
            request_deserializer=FileSystem.FromString,
            response_serializer=Path.SerializeToString,
        ),
        'setWorkingDirectory': grpc.unary_unary_rpc_method_handler(
            servicer.setWorkingDirectory,
            request_deserializer=Path.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'setPosixFilePermissions': grpc.unary_unary_rpc_method_handler(
            servicer.setPosixFilePermissions,
            request_deserializer=SetPosixFilePermissionsRequest.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'readSymbolicLink': grpc.unary_unary_rpc_method_handler(
            servicer.readSymbolicLink,
            request_deserializer=Path.FromString,
            response_serializer=Path.SerializeToString,
        ),
        'isOpen': grpc.unary_unary_rpc_method_handler(
            servicer.isOpen,
            request_deserializer=FileSystem.FromString,
            response_serializer=Is.SerializeToString,
        ),
        'close': grpc.unary_unary_rpc_method_handler(
            servicer.close,
            request_deserializer=FileSystem.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'waitUntilDone': grpc.unary_unary_rpc_method_handler(
            servicer.waitUntilDone,
            request_deserializer=CopyOperationWithTimeout.FromString,
            response_serializer=CopyStatus.SerializeToString,
        ),
        'localFileSystems': grpc.unary_unary_rpc_method_handler(
            servicer.localFileSystems,
            request_deserializer=Empty.FromString,
            response_serializer=FileSystems.SerializeToString,
        ),
        'listFileSystems': grpc.unary_unary_rpc_method_handler(
            servicer.listFileSystems,
            request_deserializer=Empty.FromString,
            response_serializer=FileSystems.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'xenon.XenonFileSystems', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class XenonSchedulersStub(object):
    """The Jobs API of Xenon. This interface creates various methods for creating and closing Schedulers, submitting jobs, and retrieving information about schedulers and jobs.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.getAdaptorDescriptions = channel.unary_unary(
          '/xenon.XenonSchedulers/getAdaptorDescriptions',
          request_serializer=Empty.SerializeToString,
          response_deserializer=SchedulerAdaptorDescriptions.FromString,
          )
      self.getAdaptorDescription = channel.unary_unary(
          '/xenon.XenonSchedulers/getAdaptorDescription',
          request_serializer=AdaptorName.SerializeToString,
          response_deserializer=SchedulerAdaptorDescription.FromString,
          )
      self.create = channel.unary_unary(
          '/xenon.XenonSchedulers/create',
          request_serializer=CreateSchedulerRequest.SerializeToString,
          response_deserializer=Scheduler.FromString,
          )
      self.submitBatchJob = channel.unary_unary(
          '/xenon.XenonSchedulers/submitBatchJob',
          request_serializer=SubmitBatchJobRequest.SerializeToString,
          response_deserializer=Job.FromString,
          )
      self.submitInteractiveJob = channel.stream_stream(
          '/xenon.XenonSchedulers/submitInteractiveJob',
          request_serializer=SubmitInteractiveJobRequest.SerializeToString,
          response_deserializer=SubmitInteractiveJobResponse.FromString,
          )
      self.getQueues = channel.unary_unary(
          '/xenon.XenonSchedulers/getQueues',
          request_serializer=Scheduler.SerializeToString,
          response_deserializer=Queues.FromString,
          )
      self.getDefaultQueueName = channel.unary_unary(
          '/xenon.XenonSchedulers/getDefaultQueueName',
          request_serializer=Scheduler.SerializeToString,
          response_deserializer=Queue.FromString,
          )
      self.getJobs = channel.unary_unary(
          '/xenon.XenonSchedulers/getJobs',
          request_serializer=SchedulerAndQueues.SerializeToString,
          response_deserializer=Jobs.FromString,
          )
      self.getJobStatus = channel.unary_unary(
          '/xenon.XenonSchedulers/getJobStatus',
          request_serializer=Job.SerializeToString,
          response_deserializer=JobStatus.FromString,
          )
      self.getJobStatuses = channel.unary_unary(
          '/xenon.XenonSchedulers/getJobStatuses',
          request_serializer=Jobs.SerializeToString,
          response_deserializer=JobStatuses.FromString,
          )
      self.getQueueStatus = channel.unary_unary(
          '/xenon.XenonSchedulers/getQueueStatus',
          request_serializer=SchedulerAndQueue.SerializeToString,
          response_deserializer=QueueStatus.FromString,
          )
      self.getQueueStatuses = channel.unary_unary(
          '/xenon.XenonSchedulers/getQueueStatuses',
          request_serializer=SchedulerAndQueues.SerializeToString,
          response_deserializer=QueueStatuses.FromString,
          )
      self.waitUntilDone = channel.unary_unary(
          '/xenon.XenonSchedulers/waitUntilDone',
          request_serializer=JobWithTimeout.SerializeToString,
          response_deserializer=JobStatus.FromString,
          )
      self.waitUntilRunning = channel.unary_unary(
          '/xenon.XenonSchedulers/waitUntilRunning',
          request_serializer=JobWithTimeout.SerializeToString,
          response_deserializer=JobStatus.FromString,
          )
      self.isOpen = channel.unary_unary(
          '/xenon.XenonSchedulers/isOpen',
          request_serializer=Scheduler.SerializeToString,
          response_deserializer=Is.FromString,
          )
      self.cancelJob = channel.unary_unary(
          '/xenon.XenonSchedulers/cancelJob',
          request_serializer=Job.SerializeToString,
          response_deserializer=JobStatus.FromString,
          )
      self.close = channel.unary_unary(
          '/xenon.XenonSchedulers/close',
          request_serializer=Scheduler.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.localScheduler = channel.unary_unary(
          '/xenon.XenonSchedulers/localScheduler',
          request_serializer=Empty.SerializeToString,
          response_deserializer=Scheduler.FromString,
          )
      self.listSchedulers = channel.unary_unary(
          '/xenon.XenonSchedulers/listSchedulers',
          request_serializer=Empty.SerializeToString,
          response_deserializer=Schedulers.FromString,
          )


  class XenonSchedulersServicer(object):
    """The Jobs API of Xenon. This interface creates various methods for creating and closing Schedulers, submitting jobs, and retrieving information about schedulers and jobs.
    """

    def getAdaptorDescriptions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getAdaptorDescription(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def submitBatchJob(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def submitInteractiveJob(self, request_iterator, context):
      """The first response message in the response stream will contain the job identifier and empty stdout and stdout.
      Other response messages will also contain the job identifier and filled stdout and/or stderr.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getQueues(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getDefaultQueueName(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getJobs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getJobStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getJobStatuses(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getQueueStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def getQueueStatuses(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def waitUntilDone(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def waitUntilRunning(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def isOpen(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def cancelJob(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def close(self, request, context):
      """Close scheduler and forget it
      If scheduler is embedded then any pending/running jobs will be killed
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def localScheduler(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def listSchedulers(self, request, context):
      """List the created schedulers
      Specific to grpc, not part of Xenon library
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_XenonSchedulersServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'getAdaptorDescriptions': grpc.unary_unary_rpc_method_handler(
            servicer.getAdaptorDescriptions,
            request_deserializer=Empty.FromString,
            response_serializer=SchedulerAdaptorDescriptions.SerializeToString,
        ),
        'getAdaptorDescription': grpc.unary_unary_rpc_method_handler(
            servicer.getAdaptorDescription,
            request_deserializer=AdaptorName.FromString,
            response_serializer=SchedulerAdaptorDescription.SerializeToString,
        ),
        'create': grpc.unary_unary_rpc_method_handler(
            servicer.create,
            request_deserializer=CreateSchedulerRequest.FromString,
            response_serializer=Scheduler.SerializeToString,
        ),
        'submitBatchJob': grpc.unary_unary_rpc_method_handler(
            servicer.submitBatchJob,
            request_deserializer=SubmitBatchJobRequest.FromString,
            response_serializer=Job.SerializeToString,
        ),
        'submitInteractiveJob': grpc.stream_stream_rpc_method_handler(
            servicer.submitInteractiveJob,
            request_deserializer=SubmitInteractiveJobRequest.FromString,
            response_serializer=SubmitInteractiveJobResponse.SerializeToString,
        ),
        'getQueues': grpc.unary_unary_rpc_method_handler(
            servicer.getQueues,
            request_deserializer=Scheduler.FromString,
            response_serializer=Queues.SerializeToString,
        ),
        'getDefaultQueueName': grpc.unary_unary_rpc_method_handler(
            servicer.getDefaultQueueName,
            request_deserializer=Scheduler.FromString,
            response_serializer=Queue.SerializeToString,
        ),
        'getJobs': grpc.unary_unary_rpc_method_handler(
            servicer.getJobs,
            request_deserializer=SchedulerAndQueues.FromString,
            response_serializer=Jobs.SerializeToString,
        ),
        'getJobStatus': grpc.unary_unary_rpc_method_handler(
            servicer.getJobStatus,
            request_deserializer=Job.FromString,
            response_serializer=JobStatus.SerializeToString,
        ),
        'getJobStatuses': grpc.unary_unary_rpc_method_handler(
            servicer.getJobStatuses,
            request_deserializer=Jobs.FromString,
            response_serializer=JobStatuses.SerializeToString,
        ),
        'getQueueStatus': grpc.unary_unary_rpc_method_handler(
            servicer.getQueueStatus,
            request_deserializer=SchedulerAndQueue.FromString,
            response_serializer=QueueStatus.SerializeToString,
        ),
        'getQueueStatuses': grpc.unary_unary_rpc_method_handler(
            servicer.getQueueStatuses,
            request_deserializer=SchedulerAndQueues.FromString,
            response_serializer=QueueStatuses.SerializeToString,
        ),
        'waitUntilDone': grpc.unary_unary_rpc_method_handler(
            servicer.waitUntilDone,
            request_deserializer=JobWithTimeout.FromString,
            response_serializer=JobStatus.SerializeToString,
        ),
        'waitUntilRunning': grpc.unary_unary_rpc_method_handler(
            servicer.waitUntilRunning,
            request_deserializer=JobWithTimeout.FromString,
            response_serializer=JobStatus.SerializeToString,
        ),
        'isOpen': grpc.unary_unary_rpc_method_handler(
            servicer.isOpen,
            request_deserializer=Scheduler.FromString,
            response_serializer=Is.SerializeToString,
        ),
        'cancelJob': grpc.unary_unary_rpc_method_handler(
            servicer.cancelJob,
            request_deserializer=Job.FromString,
            response_serializer=JobStatus.SerializeToString,
        ),
        'close': grpc.unary_unary_rpc_method_handler(
            servicer.close,
            request_deserializer=Scheduler.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'localScheduler': grpc.unary_unary_rpc_method_handler(
            servicer.localScheduler,
            request_deserializer=Empty.FromString,
            response_serializer=Scheduler.SerializeToString,
        ),
        'listSchedulers': grpc.unary_unary_rpc_method_handler(
            servicer.listSchedulers,
            request_deserializer=Empty.FromString,
            response_serializer=Schedulers.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'xenon.XenonSchedulers', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaXenonFileSystemsServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """XenonFiles represents the Xenon nl.esciencecenter.xenon.filesystems.FileSystem class.
    This interface contains various methods for creating and closing FileSystems, creating Paths and operations on these Paths.
    """
    def getAdaptorDescriptions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getAdaptorDescription(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def create(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def createDirectories(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def createDirectory(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def createFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def createSymbolicLink(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def copy(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def cancel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def rename(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def delete(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def exists(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def readFromFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def writeToFile(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def appendToFile(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def list(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getAttributes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getWorkingDirectory(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def setWorkingDirectory(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def setPosixFilePermissions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def readSymbolicLink(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def isOpen(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def close(self, request, context):
      """Closes a filestem, any actions running it with this filestystem will be terminated, will also forget the filesystem
      Any pending/running copy operations will be killed
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def waitUntilDone(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def localFileSystems(self, request, context):
      """Returns filesystems for all local drives
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def listFileSystems(self, request, context):
      """List the created filesystems
      Specific to grpc, not part of Xenon library
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaXenonFileSystemsStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """XenonFiles represents the Xenon nl.esciencecenter.xenon.filesystems.FileSystem class.
    This interface contains various methods for creating and closing FileSystems, creating Paths and operations on these Paths.
    """
    def getAdaptorDescriptions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getAdaptorDescriptions.future = None
    def getAdaptorDescription(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getAdaptorDescription.future = None
    def create(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    create.future = None
    def createDirectories(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    createDirectories.future = None
    def createDirectory(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    createDirectory.future = None
    def createFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    createFile.future = None
    def createSymbolicLink(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    createSymbolicLink.future = None
    def copy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    copy.future = None
    def cancel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    cancel.future = None
    def getStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getStatus.future = None
    def rename(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    rename.future = None
    def delete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    delete.future = None
    def exists(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    exists.future = None
    def readFromFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def writeToFile(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    writeToFile.future = None
    def appendToFile(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    appendToFile.future = None
    def list(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def getAttributes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getAttributes.future = None
    def getWorkingDirectory(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getWorkingDirectory.future = None
    def setWorkingDirectory(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    setWorkingDirectory.future = None
    def setPosixFilePermissions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    setPosixFilePermissions.future = None
    def readSymbolicLink(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    readSymbolicLink.future = None
    def isOpen(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    isOpen.future = None
    def close(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Closes a filestem, any actions running it with this filestystem will be terminated, will also forget the filesystem
      Any pending/running copy operations will be killed
      """
      raise NotImplementedError()
    close.future = None
    def waitUntilDone(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    waitUntilDone.future = None
    def localFileSystems(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns filesystems for all local drives
      """
      raise NotImplementedError()
    localFileSystems.future = None
    def listFileSystems(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List the created filesystems
      Specific to grpc, not part of Xenon library
      """
      raise NotImplementedError()
    listFileSystems.future = None


  def beta_create_XenonFileSystems_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('xenon.XenonFileSystems', 'appendToFile'): AppendToFileRequest.FromString,
      ('xenon.XenonFileSystems', 'cancel'): CopyOperation.FromString,
      ('xenon.XenonFileSystems', 'close'): FileSystem.FromString,
      ('xenon.XenonFileSystems', 'copy'): CopyRequest.FromString,
      ('xenon.XenonFileSystems', 'create'): CreateFileSystemRequest.FromString,
      ('xenon.XenonFileSystems', 'createDirectories'): Path.FromString,
      ('xenon.XenonFileSystems', 'createDirectory'): Path.FromString,
      ('xenon.XenonFileSystems', 'createFile'): Path.FromString,
      ('xenon.XenonFileSystems', 'createSymbolicLink'): CreateSymbolicLinkRequest.FromString,
      ('xenon.XenonFileSystems', 'delete'): DeleteRequest.FromString,
      ('xenon.XenonFileSystems', 'exists'): Path.FromString,
      ('xenon.XenonFileSystems', 'getAdaptorDescription'): AdaptorName.FromString,
      ('xenon.XenonFileSystems', 'getAdaptorDescriptions'): Empty.FromString,
      ('xenon.XenonFileSystems', 'getAttributes'): Path.FromString,
      ('xenon.XenonFileSystems', 'getStatus'): CopyOperation.FromString,
      ('xenon.XenonFileSystems', 'getWorkingDirectory'): FileSystem.FromString,
      ('xenon.XenonFileSystems', 'isOpen'): FileSystem.FromString,
      ('xenon.XenonFileSystems', 'list'): ListRequest.FromString,
      ('xenon.XenonFileSystems', 'listFileSystems'): Empty.FromString,
      ('xenon.XenonFileSystems', 'localFileSystems'): Empty.FromString,
      ('xenon.XenonFileSystems', 'readFromFile'): Path.FromString,
      ('xenon.XenonFileSystems', 'readSymbolicLink'): Path.FromString,
      ('xenon.XenonFileSystems', 'rename'): RenameRequest.FromString,
      ('xenon.XenonFileSystems', 'setPosixFilePermissions'): SetPosixFilePermissionsRequest.FromString,
      ('xenon.XenonFileSystems', 'setWorkingDirectory'): Path.FromString,
      ('xenon.XenonFileSystems', 'waitUntilDone'): CopyOperationWithTimeout.FromString,
      ('xenon.XenonFileSystems', 'writeToFile'): WriteToFileRequest.FromString,
    }
    response_serializers = {
      ('xenon.XenonFileSystems', 'appendToFile'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'cancel'): CopyStatus.SerializeToString,
      ('xenon.XenonFileSystems', 'close'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'copy'): CopyOperation.SerializeToString,
      ('xenon.XenonFileSystems', 'create'): FileSystem.SerializeToString,
      ('xenon.XenonFileSystems', 'createDirectories'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'createDirectory'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'createFile'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'createSymbolicLink'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'delete'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'exists'): Is.SerializeToString,
      ('xenon.XenonFileSystems', 'getAdaptorDescription'): FileSystemAdaptorDescription.SerializeToString,
      ('xenon.XenonFileSystems', 'getAdaptorDescriptions'): FileSystemAdaptorDescriptions.SerializeToString,
      ('xenon.XenonFileSystems', 'getAttributes'): PathAttributes.SerializeToString,
      ('xenon.XenonFileSystems', 'getStatus'): CopyStatus.SerializeToString,
      ('xenon.XenonFileSystems', 'getWorkingDirectory'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'isOpen'): Is.SerializeToString,
      ('xenon.XenonFileSystems', 'list'): PathAttributes.SerializeToString,
      ('xenon.XenonFileSystems', 'listFileSystems'): FileSystems.SerializeToString,
      ('xenon.XenonFileSystems', 'localFileSystems'): FileSystems.SerializeToString,
      ('xenon.XenonFileSystems', 'readFromFile'): ReadFromFileResponse.SerializeToString,
      ('xenon.XenonFileSystems', 'readSymbolicLink'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'rename'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'setPosixFilePermissions'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'setWorkingDirectory'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'waitUntilDone'): CopyStatus.SerializeToString,
      ('xenon.XenonFileSystems', 'writeToFile'): Empty.SerializeToString,
    }
    method_implementations = {
      ('xenon.XenonFileSystems', 'appendToFile'): face_utilities.stream_unary_inline(servicer.appendToFile),
      ('xenon.XenonFileSystems', 'cancel'): face_utilities.unary_unary_inline(servicer.cancel),
      ('xenon.XenonFileSystems', 'close'): face_utilities.unary_unary_inline(servicer.close),
      ('xenon.XenonFileSystems', 'copy'): face_utilities.unary_unary_inline(servicer.copy),
      ('xenon.XenonFileSystems', 'create'): face_utilities.unary_unary_inline(servicer.create),
      ('xenon.XenonFileSystems', 'createDirectories'): face_utilities.unary_unary_inline(servicer.createDirectories),
      ('xenon.XenonFileSystems', 'createDirectory'): face_utilities.unary_unary_inline(servicer.createDirectory),
      ('xenon.XenonFileSystems', 'createFile'): face_utilities.unary_unary_inline(servicer.createFile),
      ('xenon.XenonFileSystems', 'createSymbolicLink'): face_utilities.unary_unary_inline(servicer.createSymbolicLink),
      ('xenon.XenonFileSystems', 'delete'): face_utilities.unary_unary_inline(servicer.delete),
      ('xenon.XenonFileSystems', 'exists'): face_utilities.unary_unary_inline(servicer.exists),
      ('xenon.XenonFileSystems', 'getAdaptorDescription'): face_utilities.unary_unary_inline(servicer.getAdaptorDescription),
      ('xenon.XenonFileSystems', 'getAdaptorDescriptions'): face_utilities.unary_unary_inline(servicer.getAdaptorDescriptions),
      ('xenon.XenonFileSystems', 'getAttributes'): face_utilities.unary_unary_inline(servicer.getAttributes),
      ('xenon.XenonFileSystems', 'getStatus'): face_utilities.unary_unary_inline(servicer.getStatus),
      ('xenon.XenonFileSystems', 'getWorkingDirectory'): face_utilities.unary_unary_inline(servicer.getWorkingDirectory),
      ('xenon.XenonFileSystems', 'isOpen'): face_utilities.unary_unary_inline(servicer.isOpen),
      ('xenon.XenonFileSystems', 'list'): face_utilities.unary_stream_inline(servicer.list),
      ('xenon.XenonFileSystems', 'listFileSystems'): face_utilities.unary_unary_inline(servicer.listFileSystems),
      ('xenon.XenonFileSystems', 'localFileSystems'): face_utilities.unary_unary_inline(servicer.localFileSystems),
      ('xenon.XenonFileSystems', 'readFromFile'): face_utilities.unary_stream_inline(servicer.readFromFile),
      ('xenon.XenonFileSystems', 'readSymbolicLink'): face_utilities.unary_unary_inline(servicer.readSymbolicLink),
      ('xenon.XenonFileSystems', 'rename'): face_utilities.unary_unary_inline(servicer.rename),
      ('xenon.XenonFileSystems', 'setPosixFilePermissions'): face_utilities.unary_unary_inline(servicer.setPosixFilePermissions),
      ('xenon.XenonFileSystems', 'setWorkingDirectory'): face_utilities.unary_unary_inline(servicer.setWorkingDirectory),
      ('xenon.XenonFileSystems', 'waitUntilDone'): face_utilities.unary_unary_inline(servicer.waitUntilDone),
      ('xenon.XenonFileSystems', 'writeToFile'): face_utilities.stream_unary_inline(servicer.writeToFile),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_XenonFileSystems_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('xenon.XenonFileSystems', 'appendToFile'): AppendToFileRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'cancel'): CopyOperation.SerializeToString,
      ('xenon.XenonFileSystems', 'close'): FileSystem.SerializeToString,
      ('xenon.XenonFileSystems', 'copy'): CopyRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'create'): CreateFileSystemRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'createDirectories'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'createDirectory'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'createFile'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'createSymbolicLink'): CreateSymbolicLinkRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'delete'): DeleteRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'exists'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'getAdaptorDescription'): AdaptorName.SerializeToString,
      ('xenon.XenonFileSystems', 'getAdaptorDescriptions'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'getAttributes'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'getStatus'): CopyOperation.SerializeToString,
      ('xenon.XenonFileSystems', 'getWorkingDirectory'): FileSystem.SerializeToString,
      ('xenon.XenonFileSystems', 'isOpen'): FileSystem.SerializeToString,
      ('xenon.XenonFileSystems', 'list'): ListRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'listFileSystems'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'localFileSystems'): Empty.SerializeToString,
      ('xenon.XenonFileSystems', 'readFromFile'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'readSymbolicLink'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'rename'): RenameRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'setPosixFilePermissions'): SetPosixFilePermissionsRequest.SerializeToString,
      ('xenon.XenonFileSystems', 'setWorkingDirectory'): Path.SerializeToString,
      ('xenon.XenonFileSystems', 'waitUntilDone'): CopyOperationWithTimeout.SerializeToString,
      ('xenon.XenonFileSystems', 'writeToFile'): WriteToFileRequest.SerializeToString,
    }
    response_deserializers = {
      ('xenon.XenonFileSystems', 'appendToFile'): Empty.FromString,
      ('xenon.XenonFileSystems', 'cancel'): CopyStatus.FromString,
      ('xenon.XenonFileSystems', 'close'): Empty.FromString,
      ('xenon.XenonFileSystems', 'copy'): CopyOperation.FromString,
      ('xenon.XenonFileSystems', 'create'): FileSystem.FromString,
      ('xenon.XenonFileSystems', 'createDirectories'): Empty.FromString,
      ('xenon.XenonFileSystems', 'createDirectory'): Empty.FromString,
      ('xenon.XenonFileSystems', 'createFile'): Empty.FromString,
      ('xenon.XenonFileSystems', 'createSymbolicLink'): Empty.FromString,
      ('xenon.XenonFileSystems', 'delete'): Empty.FromString,
      ('xenon.XenonFileSystems', 'exists'): Is.FromString,
      ('xenon.XenonFileSystems', 'getAdaptorDescription'): FileSystemAdaptorDescription.FromString,
      ('xenon.XenonFileSystems', 'getAdaptorDescriptions'): FileSystemAdaptorDescriptions.FromString,
      ('xenon.XenonFileSystems', 'getAttributes'): PathAttributes.FromString,
      ('xenon.XenonFileSystems', 'getStatus'): CopyStatus.FromString,
      ('xenon.XenonFileSystems', 'getWorkingDirectory'): Path.FromString,
      ('xenon.XenonFileSystems', 'isOpen'): Is.FromString,
      ('xenon.XenonFileSystems', 'list'): PathAttributes.FromString,
      ('xenon.XenonFileSystems', 'listFileSystems'): FileSystems.FromString,
      ('xenon.XenonFileSystems', 'localFileSystems'): FileSystems.FromString,
      ('xenon.XenonFileSystems', 'readFromFile'): ReadFromFileResponse.FromString,
      ('xenon.XenonFileSystems', 'readSymbolicLink'): Path.FromString,
      ('xenon.XenonFileSystems', 'rename'): Empty.FromString,
      ('xenon.XenonFileSystems', 'setPosixFilePermissions'): Empty.FromString,
      ('xenon.XenonFileSystems', 'setWorkingDirectory'): Empty.FromString,
      ('xenon.XenonFileSystems', 'waitUntilDone'): CopyStatus.FromString,
      ('xenon.XenonFileSystems', 'writeToFile'): Empty.FromString,
    }
    cardinalities = {
      'appendToFile': cardinality.Cardinality.STREAM_UNARY,
      'cancel': cardinality.Cardinality.UNARY_UNARY,
      'close': cardinality.Cardinality.UNARY_UNARY,
      'copy': cardinality.Cardinality.UNARY_UNARY,
      'create': cardinality.Cardinality.UNARY_UNARY,
      'createDirectories': cardinality.Cardinality.UNARY_UNARY,
      'createDirectory': cardinality.Cardinality.UNARY_UNARY,
      'createFile': cardinality.Cardinality.UNARY_UNARY,
      'createSymbolicLink': cardinality.Cardinality.UNARY_UNARY,
      'delete': cardinality.Cardinality.UNARY_UNARY,
      'exists': cardinality.Cardinality.UNARY_UNARY,
      'getAdaptorDescription': cardinality.Cardinality.UNARY_UNARY,
      'getAdaptorDescriptions': cardinality.Cardinality.UNARY_UNARY,
      'getAttributes': cardinality.Cardinality.UNARY_UNARY,
      'getStatus': cardinality.Cardinality.UNARY_UNARY,
      'getWorkingDirectory': cardinality.Cardinality.UNARY_UNARY,
      'isOpen': cardinality.Cardinality.UNARY_UNARY,
      'list': cardinality.Cardinality.UNARY_STREAM,
      'listFileSystems': cardinality.Cardinality.UNARY_UNARY,
      'localFileSystems': cardinality.Cardinality.UNARY_UNARY,
      'readFromFile': cardinality.Cardinality.UNARY_STREAM,
      'readSymbolicLink': cardinality.Cardinality.UNARY_UNARY,
      'rename': cardinality.Cardinality.UNARY_UNARY,
      'setPosixFilePermissions': cardinality.Cardinality.UNARY_UNARY,
      'setWorkingDirectory': cardinality.Cardinality.UNARY_UNARY,
      'waitUntilDone': cardinality.Cardinality.UNARY_UNARY,
      'writeToFile': cardinality.Cardinality.STREAM_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'xenon.XenonFileSystems', cardinalities, options=stub_options)


  class BetaXenonSchedulersServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The Jobs API of Xenon. This interface creates various methods for creating and closing Schedulers, submitting jobs, and retrieving information about schedulers and jobs.
    """
    def getAdaptorDescriptions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getAdaptorDescription(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def create(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def submitBatchJob(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def submitInteractiveJob(self, request_iterator, context):
      """The first response message in the response stream will contain the job identifier and empty stdout and stdout.
      Other response messages will also contain the job identifier and filled stdout and/or stderr.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getQueues(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getDefaultQueueName(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getJobs(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getJobStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getJobStatuses(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getQueueStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def getQueueStatuses(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def waitUntilDone(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def waitUntilRunning(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def isOpen(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def cancelJob(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def close(self, request, context):
      """Close scheduler and forget it
      If scheduler is embedded then any pending/running jobs will be killed
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def localScheduler(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def listSchedulers(self, request, context):
      """List the created schedulers
      Specific to grpc, not part of Xenon library
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaXenonSchedulersStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The Jobs API of Xenon. This interface creates various methods for creating and closing Schedulers, submitting jobs, and retrieving information about schedulers and jobs.
    """
    def getAdaptorDescriptions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getAdaptorDescriptions.future = None
    def getAdaptorDescription(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getAdaptorDescription.future = None
    def create(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    create.future = None
    def submitBatchJob(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    submitBatchJob.future = None
    def submitInteractiveJob(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """The first response message in the response stream will contain the job identifier and empty stdout and stdout.
      Other response messages will also contain the job identifier and filled stdout and/or stderr.
      """
      raise NotImplementedError()
    def getQueues(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getQueues.future = None
    def getDefaultQueueName(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getDefaultQueueName.future = None
    def getJobs(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getJobs.future = None
    def getJobStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getJobStatus.future = None
    def getJobStatuses(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getJobStatuses.future = None
    def getQueueStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getQueueStatus.future = None
    def getQueueStatuses(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    getQueueStatuses.future = None
    def waitUntilDone(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    waitUntilDone.future = None
    def waitUntilRunning(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    waitUntilRunning.future = None
    def isOpen(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    isOpen.future = None
    def cancelJob(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    cancelJob.future = None
    def close(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Close scheduler and forget it
      If scheduler is embedded then any pending/running jobs will be killed
      """
      raise NotImplementedError()
    close.future = None
    def localScheduler(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    localScheduler.future = None
    def listSchedulers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List the created schedulers
      Specific to grpc, not part of Xenon library
      """
      raise NotImplementedError()
    listSchedulers.future = None


  def beta_create_XenonSchedulers_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('xenon.XenonSchedulers', 'cancelJob'): Job.FromString,
      ('xenon.XenonSchedulers', 'close'): Scheduler.FromString,
      ('xenon.XenonSchedulers', 'create'): CreateSchedulerRequest.FromString,
      ('xenon.XenonSchedulers', 'getAdaptorDescription'): AdaptorName.FromString,
      ('xenon.XenonSchedulers', 'getAdaptorDescriptions'): Empty.FromString,
      ('xenon.XenonSchedulers', 'getDefaultQueueName'): Scheduler.FromString,
      ('xenon.XenonSchedulers', 'getJobStatus'): Job.FromString,
      ('xenon.XenonSchedulers', 'getJobStatuses'): Jobs.FromString,
      ('xenon.XenonSchedulers', 'getJobs'): SchedulerAndQueues.FromString,
      ('xenon.XenonSchedulers', 'getQueueStatus'): SchedulerAndQueue.FromString,
      ('xenon.XenonSchedulers', 'getQueueStatuses'): SchedulerAndQueues.FromString,
      ('xenon.XenonSchedulers', 'getQueues'): Scheduler.FromString,
      ('xenon.XenonSchedulers', 'isOpen'): Scheduler.FromString,
      ('xenon.XenonSchedulers', 'listSchedulers'): Empty.FromString,
      ('xenon.XenonSchedulers', 'localScheduler'): Empty.FromString,
      ('xenon.XenonSchedulers', 'submitBatchJob'): SubmitBatchJobRequest.FromString,
      ('xenon.XenonSchedulers', 'submitInteractiveJob'): SubmitInteractiveJobRequest.FromString,
      ('xenon.XenonSchedulers', 'waitUntilDone'): JobWithTimeout.FromString,
      ('xenon.XenonSchedulers', 'waitUntilRunning'): JobWithTimeout.FromString,
    }
    response_serializers = {
      ('xenon.XenonSchedulers', 'cancelJob'): JobStatus.SerializeToString,
      ('xenon.XenonSchedulers', 'close'): Empty.SerializeToString,
      ('xenon.XenonSchedulers', 'create'): Scheduler.SerializeToString,
      ('xenon.XenonSchedulers', 'getAdaptorDescription'): SchedulerAdaptorDescription.SerializeToString,
      ('xenon.XenonSchedulers', 'getAdaptorDescriptions'): SchedulerAdaptorDescriptions.SerializeToString,
      ('xenon.XenonSchedulers', 'getDefaultQueueName'): Queue.SerializeToString,
      ('xenon.XenonSchedulers', 'getJobStatus'): JobStatus.SerializeToString,
      ('xenon.XenonSchedulers', 'getJobStatuses'): JobStatuses.SerializeToString,
      ('xenon.XenonSchedulers', 'getJobs'): Jobs.SerializeToString,
      ('xenon.XenonSchedulers', 'getQueueStatus'): QueueStatus.SerializeToString,
      ('xenon.XenonSchedulers', 'getQueueStatuses'): QueueStatuses.SerializeToString,
      ('xenon.XenonSchedulers', 'getQueues'): Queues.SerializeToString,
      ('xenon.XenonSchedulers', 'isOpen'): Is.SerializeToString,
      ('xenon.XenonSchedulers', 'listSchedulers'): Schedulers.SerializeToString,
      ('xenon.XenonSchedulers', 'localScheduler'): Scheduler.SerializeToString,
      ('xenon.XenonSchedulers', 'submitBatchJob'): Job.SerializeToString,
      ('xenon.XenonSchedulers', 'submitInteractiveJob'): SubmitInteractiveJobResponse.SerializeToString,
      ('xenon.XenonSchedulers', 'waitUntilDone'): JobStatus.SerializeToString,
      ('xenon.XenonSchedulers', 'waitUntilRunning'): JobStatus.SerializeToString,
    }
    method_implementations = {
      ('xenon.XenonSchedulers', 'cancelJob'): face_utilities.unary_unary_inline(servicer.cancelJob),
      ('xenon.XenonSchedulers', 'close'): face_utilities.unary_unary_inline(servicer.close),
      ('xenon.XenonSchedulers', 'create'): face_utilities.unary_unary_inline(servicer.create),
      ('xenon.XenonSchedulers', 'getAdaptorDescription'): face_utilities.unary_unary_inline(servicer.getAdaptorDescription),
      ('xenon.XenonSchedulers', 'getAdaptorDescriptions'): face_utilities.unary_unary_inline(servicer.getAdaptorDescriptions),
      ('xenon.XenonSchedulers', 'getDefaultQueueName'): face_utilities.unary_unary_inline(servicer.getDefaultQueueName),
      ('xenon.XenonSchedulers', 'getJobStatus'): face_utilities.unary_unary_inline(servicer.getJobStatus),
      ('xenon.XenonSchedulers', 'getJobStatuses'): face_utilities.unary_unary_inline(servicer.getJobStatuses),
      ('xenon.XenonSchedulers', 'getJobs'): face_utilities.unary_unary_inline(servicer.getJobs),
      ('xenon.XenonSchedulers', 'getQueueStatus'): face_utilities.unary_unary_inline(servicer.getQueueStatus),
      ('xenon.XenonSchedulers', 'getQueueStatuses'): face_utilities.unary_unary_inline(servicer.getQueueStatuses),
      ('xenon.XenonSchedulers', 'getQueues'): face_utilities.unary_unary_inline(servicer.getQueues),
      ('xenon.XenonSchedulers', 'isOpen'): face_utilities.unary_unary_inline(servicer.isOpen),
      ('xenon.XenonSchedulers', 'listSchedulers'): face_utilities.unary_unary_inline(servicer.listSchedulers),
      ('xenon.XenonSchedulers', 'localScheduler'): face_utilities.unary_unary_inline(servicer.localScheduler),
      ('xenon.XenonSchedulers', 'submitBatchJob'): face_utilities.unary_unary_inline(servicer.submitBatchJob),
      ('xenon.XenonSchedulers', 'submitInteractiveJob'): face_utilities.stream_stream_inline(servicer.submitInteractiveJob),
      ('xenon.XenonSchedulers', 'waitUntilDone'): face_utilities.unary_unary_inline(servicer.waitUntilDone),
      ('xenon.XenonSchedulers', 'waitUntilRunning'): face_utilities.unary_unary_inline(servicer.waitUntilRunning),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_XenonSchedulers_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('xenon.XenonSchedulers', 'cancelJob'): Job.SerializeToString,
      ('xenon.XenonSchedulers', 'close'): Scheduler.SerializeToString,
      ('xenon.XenonSchedulers', 'create'): CreateSchedulerRequest.SerializeToString,
      ('xenon.XenonSchedulers', 'getAdaptorDescription'): AdaptorName.SerializeToString,
      ('xenon.XenonSchedulers', 'getAdaptorDescriptions'): Empty.SerializeToString,
      ('xenon.XenonSchedulers', 'getDefaultQueueName'): Scheduler.SerializeToString,
      ('xenon.XenonSchedulers', 'getJobStatus'): Job.SerializeToString,
      ('xenon.XenonSchedulers', 'getJobStatuses'): Jobs.SerializeToString,
      ('xenon.XenonSchedulers', 'getJobs'): SchedulerAndQueues.SerializeToString,
      ('xenon.XenonSchedulers', 'getQueueStatus'): SchedulerAndQueue.SerializeToString,
      ('xenon.XenonSchedulers', 'getQueueStatuses'): SchedulerAndQueues.SerializeToString,
      ('xenon.XenonSchedulers', 'getQueues'): Scheduler.SerializeToString,
      ('xenon.XenonSchedulers', 'isOpen'): Scheduler.SerializeToString,
      ('xenon.XenonSchedulers', 'listSchedulers'): Empty.SerializeToString,
      ('xenon.XenonSchedulers', 'localScheduler'): Empty.SerializeToString,
      ('xenon.XenonSchedulers', 'submitBatchJob'): SubmitBatchJobRequest.SerializeToString,
      ('xenon.XenonSchedulers', 'submitInteractiveJob'): SubmitInteractiveJobRequest.SerializeToString,
      ('xenon.XenonSchedulers', 'waitUntilDone'): JobWithTimeout.SerializeToString,
      ('xenon.XenonSchedulers', 'waitUntilRunning'): JobWithTimeout.SerializeToString,
    }
    response_deserializers = {
      ('xenon.XenonSchedulers', 'cancelJob'): JobStatus.FromString,
      ('xenon.XenonSchedulers', 'close'): Empty.FromString,
      ('xenon.XenonSchedulers', 'create'): Scheduler.FromString,
      ('xenon.XenonSchedulers', 'getAdaptorDescription'): SchedulerAdaptorDescription.FromString,
      ('xenon.XenonSchedulers', 'getAdaptorDescriptions'): SchedulerAdaptorDescriptions.FromString,
      ('xenon.XenonSchedulers', 'getDefaultQueueName'): Queue.FromString,
      ('xenon.XenonSchedulers', 'getJobStatus'): JobStatus.FromString,
      ('xenon.XenonSchedulers', 'getJobStatuses'): JobStatuses.FromString,
      ('xenon.XenonSchedulers', 'getJobs'): Jobs.FromString,
      ('xenon.XenonSchedulers', 'getQueueStatus'): QueueStatus.FromString,
      ('xenon.XenonSchedulers', 'getQueueStatuses'): QueueStatuses.FromString,
      ('xenon.XenonSchedulers', 'getQueues'): Queues.FromString,
      ('xenon.XenonSchedulers', 'isOpen'): Is.FromString,
      ('xenon.XenonSchedulers', 'listSchedulers'): Schedulers.FromString,
      ('xenon.XenonSchedulers', 'localScheduler'): Scheduler.FromString,
      ('xenon.XenonSchedulers', 'submitBatchJob'): Job.FromString,
      ('xenon.XenonSchedulers', 'submitInteractiveJob'): SubmitInteractiveJobResponse.FromString,
      ('xenon.XenonSchedulers', 'waitUntilDone'): JobStatus.FromString,
      ('xenon.XenonSchedulers', 'waitUntilRunning'): JobStatus.FromString,
    }
    cardinalities = {
      'cancelJob': cardinality.Cardinality.UNARY_UNARY,
      'close': cardinality.Cardinality.UNARY_UNARY,
      'create': cardinality.Cardinality.UNARY_UNARY,
      'getAdaptorDescription': cardinality.Cardinality.UNARY_UNARY,
      'getAdaptorDescriptions': cardinality.Cardinality.UNARY_UNARY,
      'getDefaultQueueName': cardinality.Cardinality.UNARY_UNARY,
      'getJobStatus': cardinality.Cardinality.UNARY_UNARY,
      'getJobStatuses': cardinality.Cardinality.UNARY_UNARY,
      'getJobs': cardinality.Cardinality.UNARY_UNARY,
      'getQueueStatus': cardinality.Cardinality.UNARY_UNARY,
      'getQueueStatuses': cardinality.Cardinality.UNARY_UNARY,
      'getQueues': cardinality.Cardinality.UNARY_UNARY,
      'isOpen': cardinality.Cardinality.UNARY_UNARY,
      'listSchedulers': cardinality.Cardinality.UNARY_UNARY,
      'localScheduler': cardinality.Cardinality.UNARY_UNARY,
      'submitBatchJob': cardinality.Cardinality.UNARY_UNARY,
      'submitInteractiveJob': cardinality.Cardinality.STREAM_STREAM,
      'waitUntilDone': cardinality.Cardinality.UNARY_UNARY,
      'waitUntilRunning': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'xenon.XenonSchedulers', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
